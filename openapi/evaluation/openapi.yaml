# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Evaluation API
    description: This service represents the Evaluation Interface
    version: 0.0.1
paths:
    /v1/evaluation/evaluate/start:
        post:
            tags:
                - Evaluation
            description: StartEvaluation evaluates all assessment results of an service based on its Target of Evaluation (binding of a cloud service to a catalog). The assessment results are evaluated regarding the contol ID.
            operationId: Evaluation_StartEvaluation
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/StartEvaluationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StartEvaluationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/evaluation/evaluate/{categoryName}/{controlId}/stop:
        post:
            tags:
                - Evaluation
            description: StopEvaluation stop the evaluation for the given Cloud Service
            operationId: Evaluation_StopEvaluation
            parameters:
                - name: categoryName
                  in: path
                  description: The category the control ID belongs to
                  required: true
                  schema:
                    type: string
                - name: controlId
                  in: path
                  description: The control ID
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TargetOfEvaluation'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StopEvaluationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/evaluation/results:
        get:
            tags:
                - Evaluation
            description: List all evaluation results. Part of the public API, also exposed as REST.
            operationId: Evaluation_ListEvaluationResults
            parameters:
                - name: filteredCloudServiceId
                  in: query
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  schema:
                    type: string
                - name: asc
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListEvaluationResultsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        AllowedValues:
            type: object
            properties:
                values:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufValue'
            description: Defines a range
        AssessmentResult:
            type: object
            properties:
                id:
                    type: string
                    description: Assessment result id
                timestamp:
                    type: string
                    description: Time of assessment
                    format: date-time
                metricId:
                    type: string
                    description: Reference to the metric the assessment was based on
                metricConfiguration:
                    $ref: '#/components/schemas/MetricConfiguration'
                compliant:
                    type: boolean
                    description: 'Compliant case: true or false'
                evidenceId:
                    type: string
                    description: Reference to the assessed evidence
                resourceId:
                    type: string
                    description: Reference to the resource of the assessed evidence
                resourceTypes:
                    type: array
                    items:
                        type: string
                    description: Resource types
                nonComplianceComments:
                    type: string
                    description: Some comments on the reason for non-compliance
                cloudServiceId:
                    type: string
                    description: The cloud service which this assessment result belongs to
            description: A result resource, representing the result after assessing the cloud resource with id resource_id.
        Control:
            type: object
            properties:
                id:
                    type: string
                    description: A short name of the control, e.g. OPS-01, as used in OSCAL; it is not a unique ID!
                categoryName:
                    type: string
                categoryCatalogId:
                    type: string
                name:
                    type: string
                    description: Human-readable name of the control
                description:
                    type: string
                    description: Description of the control
                controls:
                    type: array
                    items:
                        $ref: '#/components/schemas/Control'
                    description: List of sub - controls -     this is in accordance with the OSCAL model.
                metrics:
                    type: array
                    items:
                        $ref: '#/components/schemas/Metric'
                    description: metrics contains either a list of reference to metrics - in this case only the id field of the metric is populated - or a list of populated metric meta-data, most likely returned by the database.
                parentControlId:
                    type: string
                parentControlCategoryName:
                    type: string
                parentControlCategoryCatalogId:
                    type: string
            description: Control represents a certain Control that needs to be fulfilled. It could be a Control in a certification catalog. It follows the OSCAL model. A requirement in the EUCS terminology, e.g., is represented as the lowest sub-control.
        EvaluationResult:
            type: object
            properties:
                id:
                    type: string
                    description: Evaluation result id
                status:
                    enum:
                        - STATUS_UNSPECIFIED
                        - COMPLIANT
                        - NOT_COMPLIANT
                        - PENDING
                    type: string
                    description: Evaluation status
                    format: enum
                categoryName:
                    type: string
                    description: The category the control belongs to
                controlId:
                    type: string
                    description: Reference to the control id the evaluation was based on
                timestamp:
                    type: string
                    description: Time of evaluation
                    format: date-time
                targetOfEvaluation:
                    $ref: '#/components/schemas/TargetOfEvaluation'
                failingAssessmentResults:
                    type: array
                    items:
                        $ref: '#/components/schemas/AssessmentResult'
                    description: List of assessment results because of which the evaluation status is not 'compliant'
            description: A evaluation result resource, representing the result after evaluating the cloud service with a specific control
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        GoogleProtobufValue:
            description: Represents a dynamically typed value which can be either null, a number, a string, a boolean, a recursive struct value, or a list of values.
        ListEvaluationResultsResponse:
            type: object
            properties:
                results:
                    type: array
                    items:
                        $ref: '#/components/schemas/EvaluationResult'
                nextPageToken:
                    type: string
        Metric:
            type: object
            properties:
                id:
                    type: string
                    description: Required. The unique identifier of the metric.
                name:
                    type: string
                    description: Required. The human readable name of the metric.
                description:
                    type: string
                    description: The description of the metric
                category:
                    type: string
                    description: The reference to control catalog category or domain
                scale:
                    enum:
                        - SCALE_UNSPECIFIED
                        - NOMINAL
                        - ORDINAL
                        - METRIC
                    type: string
                    description: The scale of this metric, e.g. categories, ranked data or metric values.
                    format: enum
                range:
                    $ref: '#/components/schemas/Range'
                interval:
                    type: integer
                    description: The interval in seconds the evidences must be collected for the respective metric. For now, we are not able to use google.protobuf.Duration because it is converted to a custom object in OpenAPI (https://github.com/google/gnostic/issues/351)
                    format: int64
                implementation:
                    $ref: '#/components/schemas/MetricImplementation'
            description: A metric resource
        MetricConfiguration:
            type: object
            properties:
                operator:
                    type: string
                    description: The operator to compare the metric, such as == or >
                targetValue:
                    $ref: '#/components/schemas/GoogleProtobufValue'
                isDefault:
                    type: boolean
                    description: Whether this configuration is a default configuration
                updatedAt:
                    type: string
                    description: The last time of update
                    format: date-time
                metricId:
                    type: string
                    description: The metric this configuration belongs to
                cloudServiceId:
                    type: string
                    description: The service this configuration belongs to
            description: Defines the operator and a target value for an individual metric
        MetricImplementation:
            type: object
            properties:
                metricId:
                    type: string
                    description: The metric which is implemented
                lang:
                    enum:
                        - LANGUAGE_UNSPECIFIED
                        - REGO
                    type: string
                    description: The language this metric is implemented in
                    format: enum
                code:
                    type: string
                    description: The actual implementation
                updatedAt:
                    type: string
                    description: The last time of update
                    format: date-time
            description: MetricImplementation defines the implementation of an individual metric.
        MinMax:
            type: object
            properties:
                min:
                    type: integer
                    description: Required.
                    format: int64
                max:
                    type: integer
                    description: Required.
                    format: int64
            description: Defines a range of values through a (inclusive) minimum and a maximum
        Order:
            type: object
            properties:
                values:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufValue'
            description: Defines a range of values in a pre-defined order from the lowest to the highest.
        Range:
            type: object
            properties:
                allowedValues:
                    $ref: '#/components/schemas/AllowedValues'
                order:
                    $ref: '#/components/schemas/Order'
                minMax:
                    $ref: '#/components/schemas/MinMax'
            description: A range resource representing the range of values
        StartEvaluationRequest:
            type: object
            properties:
                targetOfEvaluation:
                    $ref: '#/components/schemas/TargetOfEvaluation'
        StartEvaluationResponse:
            type: object
            properties:
                status:
                    type: boolean
                statusMessage:
                    type: string
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        StopEvaluationResponse:
            type: object
            properties: {}
        TargetOfEvaluation:
            type: object
            properties:
                cloudServiceId:
                    type: string
                catalogId:
                    type: string
                assuranceLevel:
                    type: string
                    description: an assurance level is not offered by every catalog, therefore it is optional
                controlsInScope:
                    type: array
                    items:
                        $ref: '#/components/schemas/Control'
                    description: 'the controls that are in scope of this ToE. Note: For some security catalogs, e.g., the EUCS, a specific set of controls (in the "worst case": all) are automatically in scope. In this case, this list needs auto-filled at an appropriate time, e.g,. in CreateTargetOfEvaluation.'
            description: A Target of Evaluation binds a cloud service to a catalog, so the service is evaluated regarding this catalog's controls
tags:
    - name: Evaluation
