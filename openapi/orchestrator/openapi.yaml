# Generated with protoc-gen-openapi
# https://github.com/googleapis/gnostic/tree/master/apps/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Orchestrator
    description: Manages the orchestration of components within the Clouditor architecture
    version: 0.0.1
paths:
    /v1/orchestrator/assessment_results:
        put:
            summary: Stores the assessment result provided by an assessment tool
            operationId: Orchestrator_StoreAssessmentResult
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AssessmentResult'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
    /v1/orchestrator/assessment_tools:
        get:
            summary: Lists all assessment tools assessing evidences for the metric given by the passed metric id
            operationId: Orchestrator_ListAssessmentTools
            parameters:
                - name: metric_id
                  in: query
                  description: filter tools by metric id
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListAssessmentToolsResponse'
        post:
            summary: Registers the passed assessment tool
            operationId: Orchestrator_RegisterAssessmentTool
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AssessmentTool'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AssessmentTool'
    /v1/orchestrator/assessment_tools/{tool_id}:
        get:
            summary: Returns assessment tool given by the passed tool id
            operationId: Orchestrator_GetAssessmentTool
            parameters:
                - name: tool_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AssessmentTool'
        put:
            summary: Updates the assessment tool given by the passed id
            operationId: Orchestrator_UpdateAssessmentTool
            parameters:
                - name: tool_id
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AssessmentTool'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AssessmentTool'
        delete:
            summary: Remove assessment tool with passed id from the list of active assessment tools
            operationId: Orchestrator_DeregisterAssessmentTool
            parameters:
                - name: tool_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
    /v1/orchestrator/metrics:
        get:
            summary: List all metrics provided by the metric catalog
            operationId: Orchestrator_ListMetrics
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMetricsResponse'
    /v1/orchestrator/metrics/{metric_id}:
        get:
            summary: Returns the metric with the passed metric id
            operationId: Orchestrator_GetMetric
            parameters:
                - name: metric_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Metric'
components:
    schemas:
        AllowedValues:
            properties:
                values:
                    type: array
                    items:
                        $ref: '#/components/schemas/Value'
            description: Defines a range
        AssessmentResult:
            properties:
                id:
                    type: string
                    description: the ID in a uuid format
                metric_id:
                    type: string
                    description: the ID of the metric it refers to
                result:
                    type: integer
                    format: enum
                target_value:
                    type: string
                evidence_id:
                    type: string
        AssessmentTool:
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                available_metrics:
                    type: array
                    items:
                        type: string
                    description: a list of metrics that this tool can assess, referred by their ids
            description: Represents an external tool or service that offers assessments according to certain metrics
        ListAssessmentToolsResponse:
            properties:
                tools:
                    type: array
                    items:
                        $ref: '#/components/schemas/AssessmentTool'
        ListMetricsResponse:
            properties:
                metrics:
                    type: array
                    items:
                        $ref: '#/components/schemas/Metric'
        ListValue:
            properties:
                values:
                    type: array
                    items:
                        $ref: '#/components/schemas/Value'
                    description: Repeated field of dynamically typed values.
            description: '`ListValue` is a wrapper around a repeated field of values. The JSON representation for `ListValue` is JSON array.'
        Metric:
            properties:
                id:
                    type: integer
                    description: Required. The unique identifier of the metric.
                    format: int32
                name:
                    type: string
                    description: Required. The human readable name of the metric.
                description:
                    type: string
                    description: The description of the metric
                category:
                    type: string
                    description: The reference to control catalog category or domain
                scale:
                    type: integer
                    description: The scale of this metric, e.g. categories, ranked data or metric values.
                    format: enum
                range:
                    $ref: '#/components/schemas/Range'
            description: A metric resource
        MinMax:
            properties:
                min:
                    type: integer
                    description: Required.
                    format: int64
                max:
                    type: integer
                    description: Required.
                    format: int64
            description: Defines a range of values through a (inclusive) minimum and a maximum
        Order:
            properties:
                values:
                    type: array
                    items:
                        $ref: '#/components/schemas/Value'
            description: Defines a range of values in a pre-defined order from the lowest to the highest.
        Range:
            properties:
                allowed_values:
                    $ref: '#/components/schemas/AllowedValues'
                order:
                    $ref: '#/components/schemas/Order'
                min_max:
                    $ref: '#/components/schemas/MinMax'
            description: A range resource representing the range of values
        Struct:
            properties:
                fields:
                    $ref: '#/components/schemas/FieldsEntry'
            description: '`Struct` represents a structured data value, consisting of fields which map to dynamically typed values. In some languages, `Struct` might be supported by a native representation. For example, in scripting languages like JS a struct is represented as an object. The details of that representation are described together with the proto support for the language. The JSON representation for `Struct` is JSON object.'
        Value:
            properties:
                null_value:
                    type: integer
                    description: Represents a null value.
                    format: enum
                number_value:
                    type: number
                    description: Represents a double value.
                    format: double
                string_value:
                    type: string
                    description: Represents a string value.
                bool_value:
                    type: boolean
                    description: Represents a boolean value.
                struct_value:
                    $ref: '#/components/schemas/Struct'
                list_value:
                    $ref: '#/components/schemas/ListValue'
            description: '`Value` represents a dynamically typed value which can be either null, a number, a string, a boolean, a recursive struct value, or a list of values. A producer of value is expected to set one of that variants, absence of any variant indicates an error. The JSON representation for `Value` is JSON value.'
