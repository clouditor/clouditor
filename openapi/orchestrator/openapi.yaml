# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Orchestrator API
    description: Manages the orchestration of components within the Clouditor architecture
    version: 0.0.1
paths:
    /v1/orchestrator/assessment_results:
        get:
            tags:
                - Orchestrator
            description: List all assessment results. Part of the public API, also exposed as REST.
            operationId: Orchestrator_ListAssessmentResults
            parameters:
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListAssessmentResultsResponse'
        post:
            tags:
                - Orchestrator
            description: Stores the assessment result provided by an assessment tool
            operationId: Orchestrator_StoreAssessmentResult
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AssessmentResult'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StoreAssessmentResultResponse'
    /v1/orchestrator/assessment_tools:
        get:
            tags:
                - Orchestrator
            description: |-
                Lists all assessment tools assessing evidences for the metric given by the
                 passed metric id
            operationId: Orchestrator_ListAssessmentTools
            parameters:
                - name: metricId
                  in: query
                  description: filter tools by metric id
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListAssessmentToolsResponse'
        post:
            tags:
                - Orchestrator
            description: Registers the passed assessment tool
            operationId: Orchestrator_RegisterAssessmentTool
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AssessmentTool'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AssessmentTool'
    /v1/orchestrator/assessment_tools/{toolId}:
        get:
            tags:
                - Orchestrator
            description: Returns assessment tool given by the passed tool id
            operationId: Orchestrator_GetAssessmentTool
            parameters:
                - name: toolId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AssessmentTool'
        put:
            tags:
                - Orchestrator
            description: Updates the assessment tool given by the passed id
            operationId: Orchestrator_UpdateAssessmentTool
            parameters:
                - name: toolId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AssessmentTool'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AssessmentTool'
        delete:
            tags:
                - Orchestrator
            description: |-
                Remove assessment tool with passed id from the list of active assessment
                 tools
            operationId: Orchestrator_DeregisterAssessmentTool
            parameters:
                - name: toolId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
    /v1/orchestrator/certificates:
        get:
            tags:
                - Orchestrator
            description: Lists all target certificates
            operationId: Orchestrator_ListCertificates
            parameters:
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCertificatesResponse'
        post:
            tags:
                - Orchestrator
            description: Creates a new certificate
            operationId: Orchestrator_CreateCertificate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Certificate'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Certificate'
    /v1/orchestrator/certificates/{certificateId}:
        get:
            tags:
                - Orchestrator
            description: Retrieves a certificate
            operationId: Orchestrator_GetCertificate
            parameters:
                - name: certificateId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Certificate'
        put:
            tags:
                - Orchestrator
            description: Updates an existing certificate
            operationId: Orchestrator_UpdateCertificate
            parameters:
                - name: certificateId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Certificate'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Certificate'
        delete:
            tags:
                - Orchestrator
            description: Removes a certificate
            operationId: Orchestrator_RemoveCertificate
            parameters:
                - name: certificateId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
    /v1/orchestrator/cloud_services:
        get:
            tags:
                - Orchestrator
            description: Lists all target cloud services
            operationId: Orchestrator_ListCloudServices
            parameters:
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCloudServicesResponse'
        post:
            tags:
                - Orchestrator
            description: Registers a new target cloud service
            operationId: Orchestrator_RegisterCloudService
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CloudService'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CloudService'
    /v1/orchestrator/cloud_services/{serviceId}:
        get:
            tags:
                - Orchestrator
            description: Retrieves a target cloud service
            operationId: Orchestrator_GetCloudService
            parameters:
                - name: serviceId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CloudService'
        put:
            tags:
                - Orchestrator
            description: Registers a new target cloud service
            operationId: Orchestrator_UpdateCloudService
            parameters:
                - name: serviceId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CloudService'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CloudService'
        delete:
            tags:
                - Orchestrator
            description: Removes a target cloud service
            operationId: Orchestrator_RemoveCloudService
            parameters:
                - name: serviceId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
    /v1/orchestrator/cloud_services/{serviceId}/metric_configurations:
        get:
            tags:
                - Orchestrator
            description: |-
                Lists all a metric configurations (target value and operator) for a
                 specific service ID
            operationId: Orchestrator_ListMetricConfigurations
            parameters:
                - name: serviceId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMetricConfigurationResponse'
    /v1/orchestrator/cloud_services/{serviceId}/metric_configurations/{metricId}:
        get:
            tags:
                - Orchestrator
            description: |-
                Retrieves a metric configuration (target value and operator) for a specific
                 service and metric ID
            operationId: Orchestrator_GetMetricConfiguration
            parameters:
                - name: serviceId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: metricId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MetricConfiguration'
        put:
            tags:
                - Orchestrator
            description: |-
                Updates a metric configuration (target value and operator) for a specific
                 service and metric ID
            operationId: Orchestrator_UpdateMetricConfiguration
            parameters:
                - name: serviceId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: metricId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MetricConfiguration'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MetricConfiguration'
    /v1/orchestrator/metrics:
        get:
            tags:
                - Orchestrator
            description: List all metrics provided by the metric catalog
            operationId: Orchestrator_ListMetrics
            parameters:
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMetricsResponse'
        post:
            tags:
                - Orchestrator
            description: Creates a new metric
            operationId: Orchestrator_CreateMetric
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Metric'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Metric'
    /v1/orchestrator/metrics/{metricId}:
        get:
            tags:
                - Orchestrator
            description: Returns the metric with the passed metric id
            operationId: Orchestrator_GetMetric
            parameters:
                - name: metricId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Metric'
        put:
            tags:
                - Orchestrator
            description: Updates an existing metric
            operationId: Orchestrator_UpdateMetric
            parameters:
                - name: metricId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Metric'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Metric'
    /v1/orchestrator/metrics/{metricId}/implementation:
        get:
            tags:
                - Orchestrator
            description: Returns the metric implementation of the passed metric id
            operationId: Orchestrator_GetMetricImplementation
            parameters:
                - name: metricId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: lang
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MetricImplementation'
        put:
            tags:
                - Orchestrator
            description: Updates an existing metric implementation
            operationId: Orchestrator_UpdateMetricImplementation
            parameters:
                - name: metricId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MetricImplementation'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MetricImplementation'
    /v1/orchestrator/requirements:
        get:
            tags:
                - Orchestrator
            operationId: Orchestrator_ListRequirements
            parameters:
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListRequirementsResponse'
components:
    schemas:
        AllowedValues:
            type: object
            properties:
                values:
                    type: array
                    items:
                        $ref: '#/components/schemas/AnyJSONValue'
            description: Defines a range
        AnyJSONValue:
            oneOf:
                - type: string
                - type: number
                - type: integer
                - type: boolean
                - type: object
                - type: array
                  items:
                    $ref: '#/components/schemas/AnyJSONValue'
            description: AnyJSONValue is a "catch all" type that can hold any JSON value, except null as this is not allowed in OpenAPI
        AssessmentResult:
            type: object
            properties:
                id:
                    type: string
                    description: Assessment result id
                timestamp:
                    type: string
                    description: Time of assessment
                    format: RFC3339
                metricId:
                    type: string
                    description: Reference to the metric the assessment was based on
                metricConfiguration:
                    $ref: '#/components/schemas/MetricConfiguration'
                compliant:
                    type: boolean
                    description: 'Compliant case: true or false'
                evidenceId:
                    type: string
                    description: Reference to the assessed evidence
                resourceId:
                    type: string
                    description: Reference to the resource of the assessed evidence
                nonComplianceComments:
                    type: string
                    description: Some comments on the reason for non-compliance
            description: A result resource, representing the result after assessing the cloud resource with id resource_id.
        AssessmentTool:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                availableMetrics:
                    type: array
                    items:
                        type: string
                    description: a list of metrics that this tool can assess, referred by their ids
            description: Represents an external tool or service that offers assessments according to certain metrics.
        Certificate:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                serviceId:
                    type: string
                issueDate:
                    type: string
                expirationDate:
                    type: string
                standard:
                    type: string
                assuranceLevel:
                    type: string
                cab:
                    type: string
                description:
                    type: string
                states:
                    type: array
                    items:
                        $ref: '#/components/schemas/State'
                    description: A list of states at specific times
            description: An ISO17021-based certificate
        CloudService:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                requirements:
                    $ref: '#/components/schemas/CloudService_Requirements'
        CloudService_Requirements:
            type: object
            properties:
                requirementIds:
                    type: array
                    items:
                        type: string
        ListAssessmentResultsResponse:
            type: object
            properties:
                results:
                    type: array
                    items:
                        $ref: '#/components/schemas/AssessmentResult'
                nextPageToken:
                    type: string
        ListAssessmentToolsResponse:
            type: object
            properties:
                tools:
                    type: array
                    items:
                        $ref: '#/components/schemas/AssessmentTool'
                nextPageToken:
                    type: string
        ListCertificatesResponse:
            type: object
            properties:
                certificates:
                    type: array
                    items:
                        $ref: '#/components/schemas/Certificate'
                nextPageToken:
                    type: string
        ListCloudServicesResponse:
            type: object
            properties:
                services:
                    type: array
                    items:
                        $ref: '#/components/schemas/CloudService'
                nextPageToken:
                    type: string
        ListMetricConfigurationResponse:
            type: object
            properties:
                configurations:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/MetricConfiguration'
                    description: A map of metric configurations associated by their metric ID
        ListMetricsResponse:
            type: object
            properties:
                metrics:
                    type: array
                    items:
                        $ref: '#/components/schemas/Metric'
                nextPageToken:
                    type: string
        ListRequirementsResponse:
            type: object
            properties:
                requirements:
                    type: array
                    items:
                        $ref: '#/components/schemas/Requirement'
                nextPageToken:
                    type: string
        Metric:
            type: object
            properties:
                id:
                    type: string
                    description: Required. The unique identifier of the metric.
                name:
                    type: string
                    description: Required. The human readable name of the metric.
                description:
                    type: string
                    description: The description of the metric
                category:
                    type: string
                    description: The reference to control catalog category or domain
                scale:
                    enum:
                        - NOMINAL
                        - ORDINAL
                        - METRIC
                    type: string
                    description: The scale of this metric, e.g. categories, ranked data or metric values.
                    format: enum
                range:
                    $ref: '#/components/schemas/Range'
            description: A metric resource
        MetricConfiguration:
            type: object
            properties:
                operator:
                    type: string
                    description: The operator to compare the metric, such as == or >
                targetValue:
                    $ref: '#/components/schemas/AnyJSONValue'
                isDefault:
                    type: boolean
                    description: Whether this configuration is a default configuration
            description: Defines the operator and a target value for an individual metric
        MetricImplementation:
            type: object
            properties:
                metricId:
                    type: string
                    description: The metric which is implemented
                lang:
                    enum:
                        - LANGUAGE_UNSPECIFIED
                        - REGO
                    type: string
                    description: The language this metric is implemented in
                    format: enum
                code:
                    type: string
                    description: The actual implementation
            description: MetricImplementation defines the implementation of an individual metric.
        MinMax:
            type: object
            properties:
                min:
                    type: integer
                    description: Required.
                    format: int64
                max:
                    type: integer
                    description: Required.
                    format: int64
            description: Defines a range of values through a (inclusive) minimum and a maximum
        Order:
            type: object
            properties:
                values:
                    type: array
                    items:
                        $ref: '#/components/schemas/AnyJSONValue'
            description: Defines a range of values in a pre-defined order from the lowest to the highest.
        Range:
            type: object
            properties:
                allowedValues:
                    $ref: '#/components/schemas/AllowedValues'
                order:
                    $ref: '#/components/schemas/Order'
                minMax:
                    $ref: '#/components/schemas/MinMax'
            description: A range resource representing the range of values
        Requirement:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                metricIds:
                    type: array
                    items:
                        type: string
            description: Requirement represents a certain requirement that needs to be fulfilled. It could be a control in a certification catalog.
        State:
            type: object
            properties:
                id:
                    type: string
                state:
                    type: string
                    description: An EUCS-defined state, e.g. `new`, `suspended` or `withdrawn`
                treeId:
                    type: string
                timestamp:
                    type: string
                certificateId:
                    type: string
                    description: Reference to the certificate
            description: A state of a certificate at a given time
        StoreAssessmentResultResponse:
            type: object
            properties:
                status:
                    type: boolean
                statusMessage:
                    type: string
tags:
    - name: Orchestrator
