# Generated with protoc-gen-openapi
# https://github.com/googleapis/gnostic/tree/master/apps/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Orchestrator
    description: Manages the orchestration of components within the Clouditor architecture
    version: 0.0.1
paths:
    /v1/assessment/evidences:
        post:
            summary: Assesses the evidence sent by the discovery. Part of the public API, also exposed as REST.
            operationId: Assessment_AssessEvidence
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Evidence'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AssessEvidenceResponse'
    /v1/assessment/results:
        get:
            summary: List all assessment results. Part of the public API, also exposed as REST.
            operationId: Assessment_ListAssessmentResults
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListAssessmentResultsResponse'
    /v1/orchestrator/assessment_results:
        post:
            summary: Stores the assessment result provided by an assessment tool
            operationId: Orchestrator_StoreAssessmentResult
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AssessmentResult'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StoreAssessmentResultResponse'
    /v1/orchestrator/assessment_tools:
        get:
            summary: Lists all assessment tools assessing evidences for the metric given by the passed metric id
            operationId: Orchestrator_ListAssessmentTools
            parameters:
                - name: metric_id
                  in: query
                  description: filter tools by metric id
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListAssessmentToolsResponse'
        post:
            summary: Registers the passed assessment tool
            operationId: Orchestrator_RegisterAssessmentTool
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AssessmentTool'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AssessmentTool'
    /v1/orchestrator/assessment_tools/{tool_id}:
        get:
            summary: Returns assessment tool given by the passed tool id
            operationId: Orchestrator_GetAssessmentTool
            parameters:
                - name: tool_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AssessmentTool'
        put:
            summary: Updates the assessment tool given by the passed id
            operationId: Orchestrator_UpdateAssessmentTool
            parameters:
                - name: tool_id
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AssessmentTool'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AssessmentTool'
        delete:
            summary: Remove assessment tool with passed id from the list of active assessment tools
            operationId: Orchestrator_DeregisterAssessmentTool
            parameters:
                - name: tool_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
    /v1/orchestrator/cloud_services:
        get:
            summary: Lists all target cloud services
            operationId: Orchestrator_ListCloudServices
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCloudServicesResponse'
        post:
            summary: Registers a new target cloud service
            operationId: Orchestrator_RegisterCloudService
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CloudService'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CloudService'
    /v1/orchestrator/cloud_services/{service_id}:
        get:
            summary: Retrieves a target cloud service
            operationId: Orchestrator_GetCloudService
            parameters:
                - name: service_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CloudService'
        put:
            summary: Registers a new target cloud service
            operationId: Orchestrator_UpdateCloudService
            parameters:
                - name: service_id
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CloudService'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CloudService'
        delete:
            summary: Removes a target cloud service
            operationId: Orchestrator_RemoveCloudService
            parameters:
                - name: service_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
    /v1/orchestrator/cloud_services/{service_id}/metric_configurations:
        get:
            summary: Lists all a metric configurations for a specific service and metric ID
            operationId: Orchestrator_ListMetricConfigurations
            parameters:
                - name: service_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMetricConfigurationResponse'
    /v1/orchestrator/cloud_services/{service_id}/metric_configurations/{metric_id}:
        get:
            summary: Retrieves a metric configuration for a specific service and metric ID
            operationId: Orchestrator_GetMetricConfiguration
            parameters:
                - name: service_id
                  in: query
                  schema:
                    type: string
                - name: metric_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MetricConfiguration'
    /v1/orchestrator/metrics:
        get:
            summary: List all metrics provided by the metric catalog
            operationId: Orchestrator_ListMetrics
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMetricsResponse'
    /v1/orchestrator/metrics/{metric_id}:
        get:
            summary: Returns the metric with the passed metric id
            operationId: Orchestrator_GetMetric
            parameters:
                - name: metric_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Metric'
components:
    schemas:
        AllowedValues:
            properties:
                values:
                    type: array
                    items:
                        $ref: '#/components/schemas/Value'
            description: Defines a range
        AssessEvidenceResponse:
            properties:
                status:
                    type: boolean
        AssessmentResult:
            properties:
                id:
                    type: string
                    description: Assessment result id
                timestamp:
                    type: string
                    description: Time of assessment
                    format: RFC3339
                metric_id:
                    type: string
                    description: Reference to the metric the assessment was based on
                metric_configuration:
                    $ref: '#/components/schemas/MetricConfiguration'
                compliant:
                    type: boolean
                    description: 'Compliant case: true or false'
                evidence_id:
                    type: string
                    description: Reference to the assessed evidence
                resource_id:
                    type: string
                    description: Reference to the resource of the assessed evidence
                non_compliance_comments:
                    type: string
                    description: Some comments on the reason for non-compliance
            description: A result resource, representing the result after assessing the cloud resource with id resource_id.
        AssessmentTool:
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                available_metrics:
                    type: array
                    items:
                        type: string
                    description: a list of metrics that this tool can assess, referred by their ids
            description: Represents an external tool or service that offers assessments according to certain metrics
        CloudService:
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
        Evidence:
            properties:
                id:
                    type: string
                    description: the ID in a uuid format
                timestamp:
                    type: string
                    description: time of evidence creation
                    format: RFC3339
                service_id:
                    type: string
                    description: Reference to a service this evidence was gathered from
                tool_id:
                    type: string
                    description: Reference to the tool which provided the evidence
                raw:
                    type: string
                    description: Contains the evidence in its original form without following a defined schema, e.g. the raw JSON
                resource:
                    $ref: '#/components/schemas/Value'
            description: An evidence resource
        ListAssessmentResultsResponse:
            properties:
                results:
                    type: array
                    items:
                        $ref: '#/components/schemas/AssessmentResult'
        ListAssessmentToolsResponse:
            properties:
                tools:
                    type: array
                    items:
                        $ref: '#/components/schemas/AssessmentTool'
        ListCloudServicesResponse:
            properties:
                services:
                    type: array
                    items:
                        $ref: '#/components/schemas/CloudService'
        ListMetricConfigurationResponse:
            properties:
                configurations:
                    $ref: '#/components/schemas/ConfigurationsEntry'
        ListMetricsResponse:
            properties:
                metrics:
                    type: array
                    items:
                        $ref: '#/components/schemas/Metric'
        ListValue:
            properties:
                values:
                    type: array
                    items:
                        $ref: '#/components/schemas/Value'
                    description: Repeated field of dynamically typed values.
            description: '`ListValue` is a wrapper around a repeated field of values. The JSON representation for `ListValue` is JSON array.'
        Metric:
            properties:
                id:
                    type: string
                    description: Required. The unique identifier of the metric.
                name:
                    type: string
                    description: Required. The human readable name of the metric.
                description:
                    type: string
                    description: The description of the metric
                category:
                    type: string
                    description: The reference to control catalog category or domain
                scale:
                    type: integer
                    description: The scale of this metric, e.g. categories, ranked data or metric values.
                    format: enum
                range:
                    $ref: '#/components/schemas/Range'
            description: A metric resource
        MetricConfiguration:
            properties:
                operator:
                    type: string
                    description: The operator to compare the metric, such as == or >
                target_value:
                    $ref: '#/components/schemas/Value'
                is_default:
                    type: boolean
                    description: Whether this configuration is a default configuration
            description: Defines the operator and a target value for an individual metric
        MinMax:
            properties:
                min:
                    type: integer
                    description: Required.
                    format: int64
                max:
                    type: integer
                    description: Required.
                    format: int64
            description: Defines a range of values through a (inclusive) minimum and a maximum
        Order:
            properties:
                values:
                    type: array
                    items:
                        $ref: '#/components/schemas/Value'
            description: Defines a range of values in a pre-defined order from the lowest to the highest.
        Range:
            properties:
                allowed_values:
                    $ref: '#/components/schemas/AllowedValues'
                order:
                    $ref: '#/components/schemas/Order'
                min_max:
                    $ref: '#/components/schemas/MinMax'
            description: A range resource representing the range of values
        StoreAssessmentResultResponse:
            properties: {}
        Struct:
            properties:
                fields:
                    $ref: '#/components/schemas/FieldsEntry'
            description: '`Struct` represents a structured data value, consisting of fields which map to dynamically typed values. In some languages, `Struct` might be supported by a native representation. For example, in scripting languages like JS a struct is represented as an object. The details of that representation are described together with the proto support for the language. The JSON representation for `Struct` is JSON object.'
        Value:
            properties:
                null_value:
                    type: integer
                    description: Represents a null value.
                    format: enum
                number_value:
                    type: number
                    description: Represents a double value.
                    format: double
                string_value:
                    type: string
                    description: Represents a string value.
                bool_value:
                    type: boolean
                    description: Represents a boolean value.
                struct_value:
                    $ref: '#/components/schemas/Struct'
                list_value:
                    $ref: '#/components/schemas/ListValue'
            description: '`Value` represents a dynamically typed value which can be either null, a number, a string, a boolean, a recursive struct value, or a list of values. A producer of value is expected to set one of that variants, absence of any variant indicates an error. The JSON representation for `Value` is JSON value.'
