/*
 * Copyright 2016-2019 Fraunhofer AISEC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *            $$\                           $$\ $$\   $$\
 *            $$ |                          $$ |\__|  $$ |
 *   $$$$$$$\ $$ | $$$$$$\  $$\   $$\  $$$$$$$ |$$\ $$$$$$\    $$$$$$\   $$$$$$\
 *  $$  _____|$$ |$$  __$$\ $$ |  $$ |$$  __$$ |$$ |\_$$  _|  $$  __$$\ $$  __$$\
 *  $$ /      $$ |$$ /  $$ |$$ |  $$ |$$ /  $$ |$$ |  $$ |    $$ /  $$ |$$ |  \__|
 *  $$ |      $$ |$$ |  $$ |$$ |  $$ |$$ |  $$ |$$ |  $$ |$$\ $$ |  $$ |$$ |
 *  \$$$$$$\  $$ |\$$$$$   |\$$$$$   |\$$$$$$  |$$ |  \$$$   |\$$$$$   |$$ |
 *   \_______|\__| \______/  \______/  \_______|\__|   \____/  \______/ \__|
 *
 * This file is part of Clouditor Community Edition.
 */
apply plugin: "java-library"
apply plugin: "antlr"

// Project dependencies
dependencies {
    antlr group: "org.antlr", name: "antlr4", version: "4.9.2"

    implementation "org.apache.logging.log4j:log4j-slf4j18-impl:${libraryVersions.log4j}"
    implementation group: 'com.atlassian.commonmark', name: 'commonmark', version: '0.17.0'
    implementation "org.reflections:reflections:0.9.12"
    implementation "com.auth0:java-jwt:${libraryVersions.jwt}"
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'

    api group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.12'
    api group: 'args4j', name: 'args4j', version: '2.33'
    api group: 'org.slf4j', name: 'jul-to-slf4j', version: libraryVersions.slf4j
    api group: 'org.slf4j', name: 'slf4j-api', version: libraryVersions.slf4j
    api "org.apache.logging.log4j:log4j-core:${libraryVersions.log4j}"
    api "com.fasterxml.jackson.module:jackson-module-parameter-names:${libraryVersions.jackson}"
    api "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${libraryVersions.jackson}"
    api "com.fasterxml.jackson.core:jackson-databind:${libraryVersions.jackson}"
    api "com.fasterxml.jackson.core:jackson-annotations:${libraryVersions.jackson}"
    api "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${libraryVersions.jackson}"
    api "org.glassfish.hk2:hk2-core:${libraryVersions.hk2}"
    api "org.glassfish.hk2:hk2-extras:${libraryVersions.hk2}"
    api "org.glassfish.jersey.core:jersey-server:${libraryVersions.jersey}"
    api "org.glassfish.jersey.inject:jersey-hk2:${libraryVersions.jersey}"
    api "org.glassfish.jersey.containers:jersey-container-servlet:${libraryVersions.jersey}"
    api "org.glassfish.jersey.containers:jersey-container-grizzly2-servlet:${libraryVersions.jersey}"
    api "org.glassfish.jersey.media:jersey-media-sse:${libraryVersions.jersey}"
    api "org.glassfish.jersey.media:jersey-media-json-jackson:${libraryVersions.jersey}"

    implementation group: 'org.springframework.security', name: 'spring-security-crypto', version: '5.4.5'
    implementation group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.68'

    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.0.0'

    compile group: 'org.postgresql', name: 'postgresql', version: libraryVersions.postgresql
    compile group: 'org.hibernate', name: 'hibernate-core', version: libraryVersions.hibernate
    compile group: 'com.h2database', name: 'h2', version: '1.4.200'

    testCompile group: 'org.awaitility', name: 'awaitility', version: '4.1.0'

    testImplementation "org.glassfish.jersey.test-framework:jersey-test-framework-core:${libraryVersions.jersey}"
    testImplementation "org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:${libraryVersions.jersey}"
}

generateGrammarSource {
    outputDirectory = file("${project.buildDir}/generated-src/antlr/main/io/clouditor/assurance/grammar")
    arguments += ["-visitor", "-package", "io.clouditor.assurance.grammar"]
}