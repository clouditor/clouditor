name: build

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
        if: github.ref != 'refs/heads/main'
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
      - name: Generate
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go \
          google.golang.org/grpc/cmd/protoc-gen-go-grpc \
          github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-grpc-gateway \
          github.com/google/gnostic/cmd/protoc-gen-openapi
          go generate ./...
      - name: Build
        run: |
          mkdir -p build
          go build -o build ./...
      - name: Test
        run: |
          go test -v -coverprofile=coverage.cov -coverpkg ./... -covermode=atomic ./...
      - uses: codecov/codecov-action@v2.1.0
        with:
          files: coverage.cov
          flags: unittests
          token: ${{ secrets.CODECOV_TOKEN }} # not needed, but seems to be more reliable
      - name: "Upload Artifact"
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - name: Lint
        uses: golangci/golangci-lint-action@v3.1.0
        with:
          args: --timeout=10m
      - name: Check for forbidden licenses
        run: |
          go install github.com/Bobgy/go-licenses/v2@v2.0.0-dev.0
          go-licenses csv ./... | tee licenses.txt
          ! cat licenses.txt | grep "GPL"
      - name: Check for Missing Copyright Header
        run: |
          go install github.com/google/addlicense
          addlicense -c "Fraunhofer AISEC" -l apache -check **/**.go
