name: build

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "14"
      - name: Build
        run: |
          if [ "$SONAR_TOKEN" != "" ]
          then
            ./gradlew --parallel docker jacocoRootReport sonarqube \
            -Dsonar.projectKey=clouditor_clouditor \
            -Dsonar.organization=clouditor \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN
          else
            ./gradlew --parallel docker build
          fi
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Push Docker Images
        run: |
          export TAG=`expr substr $GITHUB_SHA 1 8`
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker push clouditor/clouditor:$TAG
          docker push clouditor/engine:$TAG
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
      - name: Push Docker Images (release as latest)
        run: |
          export TAG=`expr substr $GITHUB_SHA 1 8`
          docker tag clouditor/clouditor:$TAG clouditor/clouditor
          docker tag clouditor/engine:$TAG clouditor/engine
          docker push clouditor/clouditor
          docker push clouditor/engine
        if: startsWith(github.ref, 'refs/tags/v')
  build-go:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
      - name: Generate
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go \
          google.golang.org/grpc/cmd/protoc-gen-go-grpc \
          github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-grpc-gateway \
          github.com/googleapis/gnostic/apps/protoc-gen-openapi
          go generate ./...
      - name: Build
        run: |
          go test -v -coverprofile=coverage.cov -coverpkg ./... -covermode=atomic ./...
          mkdir -p build
          go build -o build ./...
      - uses: codecov/codecov-action@v1
        with:
          files: coverage.cov
          flags: unittests
          verbose: true
      - name: "Upload Artifact"
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          args: --timeout=10m
      - name: Check for Missing Copyright Header
        run: |
          go install github.com/google/addlicense
          addlicense -c "Fraunhofer AISEC" -l apache -check **/*.go
