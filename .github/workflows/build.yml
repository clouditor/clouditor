name: build

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
        if: github.ref != 'refs/heads/main'
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
      - name: Generate
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go \
          google.golang.org/grpc/cmd/protoc-gen-go-grpc \
          github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-grpc-gateway \
          github.com/google/gnostic/cmd/protoc-gen-openapi \
          github.com/srikrsna/protoc-gen-gotag
          go generate ./...
      - name: Build
        run: |
          mkdir -p build
          go build -o build ./...
      - name: Test
        run: |
          go test -v -coverprofile=coverage.cov -coverpkg ./... -covermode=atomic ./...
      - uses: codecov/codecov-action@v2.1.0
        with:
          files: coverage.cov
          flags: unittests
          token: ${{ secrets.CODECOV_TOKEN }} # not needed, but seems to be more reliable
      - name: "Upload Artifact"
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build
      -
        name: Print event name
        run: echo github.event_name
      - name: Log in to Docker Hub
        if: github.event_name == 'push' # TODO(lebogg): Change to Release
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      -
        name: Login to GitHub Container Registry
        if: github.event_name == 'push' # TODO(lebogg): Change to Release
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Extract tags for Docker Hub
        if: github.event_name == 'push' # TODO(lebogg): Change to Release
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: clouditor/engine
          tags: type=semver,pattern={{major}}.{{minor}}
      -
        name: Build and push to both registries (ghcr and docker hub)
        if: github.event_name == 'push' # TODO(lebogg): Change to Release
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true # TODO(lebogg): only on release, like push: ${{ github.event_name == 'release' }}
          tags: |
            ${{ steps.meta.outputs.tags }}
            ghcr.io/clouditor/engine:latest
          #labels: ${{ steps.meta.outputs.labels }} # TODO(lebogg): Check what happens here
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - name: Lint
        uses: golangci/golangci-lint-action@v3.1.0
        with:
          args: --timeout=10m
      - name: Check for forbidden licenses
        run: |
          go install github.com/Bobgy/go-licenses/v2@v2.0.0-dev.0
          go-licenses csv ./... | tee licenses.txt
          ! cat licenses.txt | grep "GPL"
      - name: Check for Missing Copyright Header
        run: |
          go install github.com/google/addlicense
          addlicense -c "Fraunhofer AISEC" -l apache -check **/**.go
