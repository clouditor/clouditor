/*
 * Copyright 2016-2022 Fraunhofer AISEC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *           $$\                           $$\ $$\   $$\
 *           $$ |                          $$ |\__|  $$ |
 *  $$$$$$$\ $$ | $$$$$$\  $$\   $$\  $$$$$$$ |$$\ $$$$$$\    $$$$$$\   $$$$$$\
 * $$  _____|$$ |$$  __$$\ $$ |  $$ |$$  __$$ |$$ |\_$$  _|  $$  __$$\ $$  __$$\
 * $$ /      $$ |$$ /  $$ |$$ |  $$ |$$ /  $$ |$$ |  $$ |    $$ /  $$ |$$ | \__|
 * $$ |      $$ |$$ |  $$ |$$ |  $$ |$$ |  $$ |$$ |  $$ |$$\ $$ |  $$ |$$ |
 * \$$$$$$\  $$ |\$$$$$   |\$$$$$   |\$$$$$$  |$$ |  \$$$   |\$$$$$   |$$ |
 *  \_______|\__| \______/  \______/  \_______|\__|   \____/  \______/ \__|
 *
 * This file is part of Clouditor Community Edition.
 */
syntax = "proto3";

package clouditor.discovery.v1;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "tagger/tagger.proto";

option go_package = "api/discovery";

// Discovers cloud resources and maps these properties to the format of the
// ontology
service Discovery {
  // Starts discovering the cloud resources, exposed as REST.
  rpc Start(StartDiscoveryRequest) returns (StartDiscoveryResponse) {
    option (google.api.http) = {
      post: "/v1/discovery/start"
      body: "*"
      response_body: "*"
    };
  }

  // Lists all evidences collected in the last run, exposed as REST.
  rpc ListResources(ListResourcesRequest) returns (ListResourcesResponse) {
    option (google.api.http) = {get: "/v1/discovery/resources"};
  }
}

message StartDiscoveryRequest {
  optional string resource_group = 1;
}

message StartDiscoveryResponse {
  bool successful = 1;
}

message ListResourcesRequest {
  message Filter {
    optional string type = 1;
    optional string cloud_service_id = 2;
  }

  optional Filter filter = 1;

  int32 page_size = 10;
  string page_token = 11;
  string order_by = 12;
  bool asc = 13;
}

message ListResourcesResponse {
  repeated Resource results = 1;
  string next_page_token = 2;
}

// Resource is a wrapper around google.protobuf.Value that is needed for
// persistence reasons.
message Resource {
  // Id contains a unique ID for each resource. This is specific for the cloud
  // provider this resource was gathered for and can for example be a resource
  // URL.
  string id = 1 [(buf.validate.field).string.min_len = 1];
  // CloudServiceId is the UUID for the cloud service to which this resource
  // belongs to.
  string cloud_service_id = 2 [(buf.validate.field).string.uuid = true];
  // ResourceType contains a comma seperated string of resource types according
  // to our ontology.
  string resource_type = 3 [(buf.validate.field).string.min_len = 1];

  // Properties contains a protobuf struct that describe the resource in the
  // terms of our Clouditor ontology.
  google.protobuf.Value properties = 10 [
    (tagger.tags) = "gorm:\"serializer:valuepb;type:json\"",
    (buf.validate.field).required = true
  ];
}
