/*
 * Copyright 2023 Fraunhofer AISEC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *           $$\                           $$\ $$\   $$\
 *           $$ |                          $$ |\__|  $$ |
 *  $$$$$$$\ $$ | $$$$$$\  $$\   $$\  $$$$$$$ |$$\ $$$$$$\    $$$$$$\   $$$$$$\
 * $$  _____|$$ |$$  __$$\ $$ |  $$ |$$  __$$ |$$ |\_$$  _|  $$  __$$\ $$  __$$\
 * $$ /      $$ |$$ /  $$ |$$ |  $$ |$$ /  $$ |$$ |  $$ |    $$ /  $$ |$$ | \__|
 * $$ |      $$ |$$ |  $$ |$$ |  $$ |$$ |  $$ |$$ |  $$ |$$\ $$ |  $$ |$$ |
 * \$$$$$$\  $$ |\$$$$$   |\$$$$$   |\$$$$$$  |$$ |  \$$$   |\$$$$$   |$$ |
 *  \_______|\__| \______/  \______/  \_______|\__|   \____/  \______/ \__|
 *
 * This file is part of Clouditor Community Edition.
 */
syntax = "proto3";

package clouditor.evaluation.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "tagger/tagger.proto";
import "validate/validate.proto";

option go_package = "clouditor.io/clouditor/api/evaluation";

// Manages the evaluation of Clouditor's assessment results
service Evaluation {
  // Evaluates periodically all assessment results of a cloud service id based
  // on the given catalog id. Part of the public API, also exposed as REST.
  rpc StartEvaluation(StartEvaluationRequest)
      returns (StartEvaluationResponse) {
    option (google.api.http) = {
      post : "/v1/evaluation/evaluate/{cloud_service_id}/{catalog_id}/start"
    };
  }

  // StopEvaluation stops the evaluation for the given target of evaluation.
  // Part of the public API, also exposed as REST.
  rpc StopEvaluation(StopEvaluationRequest) returns (StopEvaluationResponse) {
    option (google.api.http) = {
      post : "/v1/evaluation/evaluate/{cloud_service_id}/{catalog_id}/stop"
    };
  }

  // List all evaluation results that the user can access. It can further be
  // restricted by various filtering options. Part of the public API, also
  // exposed as REST.
  rpc ListEvaluationResults(ListEvaluationResultsRequest)
      returns (ListEvaluationResultsResponse) {
    option (google.api.http) = {
      get : "/v1/evaluation/results"
    };
  }

  // Creates an evaluation result
  rpc CreateEvaluationResult(CreateEvaluationResultRequest)
      returns (EvaluationResult) {
    option (google.api.http) = {
      post : "/v1/evaluation/results"
      body : "result"
    };
  }
}

message StartEvaluationRequest {
  string cloud_service_id = 1 [ (validate.rules).string.uuid = true ];
  string catalog_id = 2 [ (validate.rules).string.min_len = 1 ];

  // The interval time in minutes the evaluation executes periodically. The
  // default interval is set to 5 minutes.
  optional int32 interval = 3 [ (validate.rules).int32.gt = 0 ];
}

message StartEvaluationResponse { bool successful = 1; }

message CreateEvaluationResultRequest {
  EvaluationResult result = 1 [ (validate.rules).message.required = true ];
}

message StopEvaluationRequest {
  string cloud_service_id = 1 [ (validate.rules).string.uuid = true ];

  string catalog_id = 2 [ (validate.rules).string.min_len = 1 ];
}

message StopEvaluationResponse {}

message ListEvaluationResultsRequest {
  message Filter {
    // Optional. Lists only evaluation results for a specific cloud service.
    optional string cloud_service_id = 1
        [ (validate.rules).string.uuid = true ];

    // Optional. Lists only evaluation results for a specific catalog.
    optional string catalog_id = 2 [ (validate.rules).string.min_len = 1 ];

    // Optional. Lists only evaluation results for a specific control id.
    optional string control_id = 3 [ (validate.rules).string.min_len = 1 ];

    // Optional. Lists all evaluation results for the given initial control id
    // substring, e.g., if the substring 'CMK-01.' is given it returns the
    // controls CMK-01.1B, CMK-01.1S, CMK-01.1H.
    optional string sub_controls = 4 [ (validate.rules).string.min_len = 1 ];

    // Optional. Lists only results for parent controls
    optional bool parents_only = 5;

    // Optional. Lists only manual results in their validity period
    optional bool valid_manual_only = 6;
  }

  optional Filter filter = 1;

  // Optional. Latest results grouped by control_id.
  optional bool latest_by_control_id = 2;

  int32 page_size = 10;
  string page_token = 11;
  string order_by = 12;
  bool asc = 13;
}

message ListEvaluationResultsResponse {
  repeated EvaluationResult results = 1;
  string next_page_token = 2;
}

// A evaluation result resource, representing the result after evaluating the
// cloud service with a specific control cloud_service_id, category_name and
// catalog_id are necessary to get the corresponding TargetOfEvaluation
message EvaluationResult {
  // Evaluation result id
  string id = 1
      [ (validate.rules).string = {ignore_empty : true, uuid : true} ];

  // The Cloud Service ID the evaluation belongs to
  string cloud_service_id = 2
      [ (validate.rules).string = {ignore_empty : true, uuid : true} ];

  // The control id the evaluation was based on
  string control_id = 3 [ (validate.rules).string.min_len = 1 ];

  // The category the evaluated control belongs to
  string control_category_name = 4 [ (validate.rules).string.min_len = 1 ];

  // The catalog the evaluated control belongs to
  string control_catalog_id = 5 [ (validate.rules).string.min_len = 1 ];

  // Optionally, specifies the parent control ID, if this is a sub-control
  optional string parent_control_id = 6;

  // Evaluation status
  EvaluationStatus status = 7 [ (validate.rules).enum.defined_only = true ];

  // Time of evaluation
  google.protobuf.Timestamp timestamp = 8
      [ (tagger.tags) = "gorm:\"serializer:timestamppb;type:time\"" ];

  // List of assessment results because of which the evaluation status is not
  // 'compliant'
  repeated string failing_assessment_result_ids = 9 [
    (tagger.tags) = "gorm:\"serializer:json\"",
    (validate.rules).repeated .items.string.min_len = 1
  ];

  optional string comment = 10;

  // Optional, but required if the status is one of the "manually" ones. This
  // denotes how long the (manual) created evaluation result is valid. During
  // this time, no automatic results are generated for the specific control.
  optional google.protobuf.Timestamp valid_until = 20
      [ (tagger.tags) = "gorm:\"serializer:timestamppb;type:time\"" ];
}

enum EvaluationStatus {
  EVALUATION_STATUS_UNSPECIFIED = 0;
  EVALUATION_STATUS_COMPLIANT = 1;
  EVALUATION_STATUS_COMPLIANT_MANUALLY = 2;
  EVALUATION_STATUS_NOT_COMPLIANT = 3;
  EVALUATION_STATUS_NOT_COMPLIANT_MANUALLY = 4;
  EVALUATION_STATUS_PENDING = 10;
}