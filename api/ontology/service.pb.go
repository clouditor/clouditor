// Copyright 2024 Fraunhofer AISEC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
//           $$\                           $$\ $$\   $$\
//           $$ |                          $$ |\__|  $$ |
//  $$$$$$$\ $$ | $$$$$$\  $$\   $$\  $$$$$$$ |$$\ $$$$$$\    $$$$$$\   $$$$$$\
// $$  _____|$$ |$$  __$$\ $$ |  $$ |$$  __$$ |$$ |\_$$  _|  $$  __$$\ $$  __$$\
// $$ /      $$ |$$ /  $$ |$$ |  $$ |$$ /  $$ |$$ |  $$ |    $$ /  $$ |$$ | \__|
// $$ |      $$ |$$ |  $$ |$$ |  $$ |$$ |  $$ |$$ |  $$ |$$\ $$ |  $$ |$$ |
// \$$$$$$\  $$ |\$$$$$   |\$$$$$   |\$$$$$$  |$$ |  \$$$   |\$$$$$   |$$ |
//  \_______|\__| \______/  \______/  \_______|\__|   \____/  \______/ \__|
//
// This file is part of Clouditor Community Edition.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/ontology/service.proto

package ontology

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NoopRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Resource      *Resource              `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoopRequest) Reset() {
	*x = NoopRequest{}
	mi := &file_api_ontology_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoopRequest) ProtoMessage() {}

func (x *NoopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ontology_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoopRequest.ProtoReflect.Descriptor instead.
func (*NoopRequest) Descriptor() ([]byte, []int) {
	return file_api_ontology_service_proto_rawDescGZIP(), []int{0}
}

func (x *NoopRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

var File_api_ontology_service_proto protoreflect.FileDescriptor

const file_api_ontology_service_proto_rawDesc = "" +
	"\n" +
	"\x1aapi/ontology/service.proto\x12\x15clouditor.ontology.v1\x1a\x1bapi/ontology/ontology.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\"J\n" +
	"\vNoopRequest\x12;\n" +
	"\bresource\x18\x01 \x01(\v2\x1f.clouditor.ontology.v1.ResourceR\bresource2z\n" +
	"\x0fOntologyService\x12g\n" +
	"\x04Noop\x12\".clouditor.ontology.v1.NoopRequest\x1a\x16.google.protobuf.Empty\"#\x82\xd3\xe4\x93\x02\x1d:\bresource\"\x11/v1/ontology/noopB(Z&clouditor.io/clouditor/v2/api/ontologyb\x06proto3"

var (
	file_api_ontology_service_proto_rawDescOnce sync.Once
	file_api_ontology_service_proto_rawDescData []byte
)

func file_api_ontology_service_proto_rawDescGZIP() []byte {
	file_api_ontology_service_proto_rawDescOnce.Do(func() {
		file_api_ontology_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_ontology_service_proto_rawDesc), len(file_api_ontology_service_proto_rawDesc)))
	})
	return file_api_ontology_service_proto_rawDescData
}

var file_api_ontology_service_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_api_ontology_service_proto_goTypes = []any{
	(*NoopRequest)(nil),   // 0: clouditor.ontology.v1.NoopRequest
	(*Resource)(nil),      // 1: clouditor.ontology.v1.Resource
	(*emptypb.Empty)(nil), // 2: google.protobuf.Empty
}
var file_api_ontology_service_proto_depIdxs = []int32{
	1, // 0: clouditor.ontology.v1.NoopRequest.resource:type_name -> clouditor.ontology.v1.Resource
	0, // 1: clouditor.ontology.v1.OntologyService.Noop:input_type -> clouditor.ontology.v1.NoopRequest
	2, // 2: clouditor.ontology.v1.OntologyService.Noop:output_type -> google.protobuf.Empty
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_api_ontology_service_proto_init() }
func file_api_ontology_service_proto_init() {
	if File_api_ontology_service_proto != nil {
		return
	}
	file_api_ontology_ontology_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_ontology_service_proto_rawDesc), len(file_api_ontology_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_ontology_service_proto_goTypes,
		DependencyIndexes: file_api_ontology_service_proto_depIdxs,
		MessageInfos:      file_api_ontology_service_proto_msgTypes,
	}.Build()
	File_api_ontology_service_proto = out.File
	file_api_ontology_service_proto_goTypes = nil
	file_api_ontology_service_proto_depIdxs = nil
}
