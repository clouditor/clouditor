// Auto-generated code by owl2proto (https://github.com/oxisto/owl2proto)

// Copyright 2024 Fraunhofer AISEC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
//           $$\                           $$\ $$\   $$\
//           $$ |                          $$ |\__|  $$ |
//  $$$$$$$\ $$ | $$$$$$\  $$\   $$\  $$$$$$$ |$$\ $$$$$$\    $$$$$$\   $$$$$$\
// $$  _____|$$ |$$  __$$\ $$ |  $$ |$$  __$$ |$$ |\_$$  _|  $$  __$$\ $$  __$$\
// $$ /      $$ |$$ /  $$ |$$ |  $$ |$$ /  $$ |$$ |  $$ |    $$ /  $$ |$$ | \__|
// $$ |      $$ |$$ |  $$ |$$ |  $$ |$$ |  $$ |$$ |  $$ |$$\ $$ |  $$ |$$ |
// \$$$$$$\  $$ |\$$$$$   |\$$$$$   |\$$$$$$  |$$ |  \$$$   |\$$$$$   |$$ |
//  \_______|\__| \______/  \______/  \_______|\__|   \____/  \______/ \__|
//
// This file is part of Clouditor Community Edition.

syntax = "proto3";

package clouditor.ontology.v1;

import "buf/validate/validate.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

option go_package = "clouditor.io/clouditor/v2/api/ontology";

extend google.protobuf.MessageOptions {
  repeated string resource_type_names = 60000;
}

// ABAC is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message ABAC {
  option (resource_type_names) = "ABAC";
  option (resource_type_names) = "Authorization";
  option (resource_type_names) = "SecurityFeature";
}

// AccessRestriction is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message AccessRestriction {
  oneof type {
    L3Firewall l3_firewall = 9125;
    WebApplicationFirewall web_application_firewall = 5789;
  }
}

// Account is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
// This represents the cloud account as a whole, e.g., an Azure subscription.
message Account {
  option (resource_type_names) = "Account";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 7092;
  string id = 14986 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 7908;
  map<string, string> labels = 18850;
  string name = 10291 [(buf.validate.field).required = true];
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 13304;
  GeoLocation geo_location = 590;
  repeated Redundancy redundancies = 7984;
  optional string parent_id = 10334;
  UsageStatistics usage_statistics = 12936;
}

// ActivityLogging is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message ActivityLogging {
  option (resource_type_names) = "ActivityLogging";
  option (resource_type_names) = "Logging";
  option (resource_type_names) = "Auditing";
  option (resource_type_names) = "SecurityFeature";

  bool enabled = 18133;
  bool monitoring_log_data_enabled = 13626;
  google.protobuf.Duration retention_period = 10788;
  bool security_alerts_enabled = 17680;
  repeated string logging_service_ids = 589;
}

// AnomalyDetection is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
// Analyzes the activity of a NetworkService (which includes DatabaseServices).
// Scope contains the resource ID of the protected resource.
message AnomalyDetection {
  option (resource_type_names) = "AnomalyDetection";
  option (resource_type_names) = "Auditing";
  option (resource_type_names) = "SecurityFeature";

  bool enabled = 8852;
  string scope = 8482;
  ApplicationLogging application_logging = 11132;
}

// Application is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
// This encapsulates the whole (source) code of an application.
message Application {
  option (resource_type_names) = "Application";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 13667;
  string id = 16577 [(buf.validate.field).required = true];
  map<string, string> labels = 18754;
  string name = 338 [(buf.validate.field).required = true];
  string programming_language = 6329;
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 9410;
  repeated string translation_units = 12693;
  optional string compute_id = 3792;
  repeated Functionality functionalities = 10218;
  optional string parent_id = 1712;
}

// ApplicationLogging is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message ApplicationLogging {
  option (resource_type_names) = "ApplicationLogging";
  option (resource_type_names) = "Logging";
  option (resource_type_names) = "Auditing";
  option (resource_type_names) = "SecurityFeature";

  bool enabled = 13571;
  bool monitoring_log_data_enabled = 4205;
  google.protobuf.Duration retention_period = 6319;
  bool security_alerts_enabled = 17870;
  repeated string logging_service_ids = 3793;
}

// AtRestEncryption is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message AtRestEncryption {
  oneof type {
    CustomerKeyEncryption customer_key_encryption = 5547;
    ManagedKeyEncryption managed_key_encryption = 9197;
  }
}

// Attestation is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message Attestation {
  oneof type {
    LocalAttestation local_attestation = 4296;
    RemoteAttestation remote_attestation = 13640;
  }
}

// Auditing is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message Auditing {
  oneof type {
    AnomalyDetection anomaly_detection = 4728;
    ActivityLogging activity_logging = 2956;
    ApplicationLogging application_logging = 12791;
    BootLogging boot_logging = 18439;
    OSLogging os_logging = 2926;
    ResourceLogging resource_logging = 17563;
    MalwareProtection malware_protection = 7265;
    UsageStatistics usage_statistics = 15242;
  }
}

// Authenticity is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message Authenticity {
  oneof type {
    CertificateBasedAuthentication certificate_based_authentication = 560;
    TokenBasedAuthentication token_based_authentication = 3684;
    MultiFactorAuthentiation multi_factor_authentiation = 13104;
    NoAuthentication no_authentication = 17718;
    OTPBasedAuthentication otp_based_authentication = 18743;
    PasswordBasedAuthentication password_based_authentication = 16941;
    SingleSignOn single_sign_on = 9281;
  }
}

// Authorization is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message Authorization {
  oneof type {
    ABAC abac = 14694;
    L3Firewall l3_firewall = 9125;
    WebApplicationFirewall web_application_firewall = 5789;
    RBAC rbac = 18783;
  }
}

// AutomaticUpdates is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
// This feature is, e.g., available on some VM services to automatically update their software. It ensures that a resource is protected from tampering with its state.
message AutomaticUpdates {
  option (resource_type_names) = "AutomaticUpdates";
  option (resource_type_names) = "Integrity";
  option (resource_type_names) = "SecurityFeature";

  bool enabled = 2283;
  google.protobuf.Duration interval = 2309;
  bool security_only = 1034;
}

// Availability is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message Availability {
  oneof type {
    Backup backup = 16413;
    DDoSProtection d_do_s_protection = 16707;
    GeoLocation geo_location = 10970;
    GeoRedundancy geo_redundancy = 2436;
    LocalRedundancy local_redundancy = 2537;
    ZoneRedundancy zone_redundancy = 11145;
  }
}

// Backup is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
// RetentionPeriod in hours
message Backup {
  option (resource_type_names) = "Backup";
  option (resource_type_names) = "Availability";
  option (resource_type_names) = "SecurityFeature";

  bool enabled = 2815;
  google.protobuf.Duration interval = 7186;
  google.protobuf.Duration retention_period = 6795;
  optional string storage_id = 7061;
  TransportEncryption transport_encryption = 1921;
}

// Resource is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message Resource {
  oneof type {
    Application application = 9463;
    Account account = 17437;
    Job job = 7413;
    Workflow workflow = 6742;
    Container container = 3283;
    Function function = 14517;
    VirtualMachine virtual_machine = 8578;
    ContainerOrchestration container_orchestration = 11038;
    ContainerRegistry container_registry = 14766;
    Certificate certificate = 9607;
    Key key = 3816;
    Secret secret = 2689;
    Identity identity = 6150;
    RoleAssignment role_assignment = 8031;
    ContainerImage container_image = 14207;
    VMImage vm_image = 8383;
    DeviceProvisioningService device_provisioning_service = 9517;
    MessagingHub messaging_hub = 13990;
    KeyVault key_vault = 10449;
    Workspace workspace = 16617;
    NetworkInterface network_interface = 5016;
    NetworkSecurityGroup network_security_group = 13367;
    FunctionService function_service = 4702;
    GenericNetworkService generic_network_service = 566;
    LoadBalancer load_balancer = 2870;
    LoggingService logging_service = 18789;
    SecurityAdvisoryService security_advisory_service = 5331;
    DocumentDatabaseService document_database_service = 12515;
    KeyValueDatabaseService key_value_database_service = 1496;
    MultiModalDatabaseService multi_modal_database_service = 3152;
    RelationalDatabaseService relational_database_service = 15823;
    FileStorageService file_storage_service = 12635;
    ObjectStorageService object_storage_service = 10175;
    VirtualNetwork virtual_network = 9531;
    VirtualSubNetwork virtual_sub_network = 16126;
    PasswordPolicy password_policy = 6125;
    ResourceGroup resource_group = 3664;
    BlockStorage block_storage = 9808;
    DatabaseStorage database_storage = 10098;
    FileStorage file_storage = 18252;
    ObjectStorage object_storage = 7943;
    GenericDocument generic_document = 5702;
    SecurityAdvisoryDocument security_advisory_document = 8513;
    ServiceMetadataDocument service_metadata_document = 13959;
  }
}

// BlockStorage is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message BlockStorage {
  option (resource_type_names) = "BlockStorage";
  option (resource_type_names) = "Storage";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 13965;
  string id = 18268 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 3681;
  map<string, string> labels = 3996;
  string name = 11888 [(buf.validate.field).required = true];
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 7481;
  AtRestEncryption at_rest_encryption = 508;
  repeated Backup backups = 17505;
  GeoLocation geo_location = 7490;
  Immutability immutability = 7186;
  repeated Redundancy redundancies = 14395;
  optional string parent_id = 4635;
  ResourceLogging resource_logging = 2907;
  UsageStatistics usage_statistics = 3297;
}

// BootLogging is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message BootLogging {
  option (resource_type_names) = "BootLogging";
  option (resource_type_names) = "Logging";
  option (resource_type_names) = "Auditing";
  option (resource_type_names) = "SecurityFeature";

  bool enabled = 17321;
  bool monitoring_log_data_enabled = 9135;
  google.protobuf.Duration retention_period = 2338;
  bool security_alerts_enabled = 3133;
  repeated string logging_service_ids = 15790;
}

// CICDService is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message CICDService {
  oneof type {
    Job job = 7413;
    Workflow workflow = 6742;
  }
}

// Certificate is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message Certificate {
  option (resource_type_names) = "Certificate";
  option (resource_type_names) = "Credential";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 9853;
  bool enabled = 12175;
  google.protobuf.Timestamp expiration_date = 12194;
  string id = 2793 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 6200;
  bool is_managed = 4420;
  map<string, string> labels = 2199;
  string name = 8312 [(buf.validate.field).required = true];
  google.protobuf.Timestamp not_before_date = 18449;
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 14919;
  optional string cloud_resource_id = 12393;
  GeoLocation geo_location = 12460;
  repeated Redundancy redundancies = 1226;
  optional string parent_id = 9993;
  UsageStatistics usage_statistics = 17334;
}

// CertificateBasedAuthentication is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message CertificateBasedAuthentication {
  option (resource_type_names) = "CertificateBasedAuthentication";
  option (resource_type_names) = "Authenticity";
  option (resource_type_names) = "SecurityFeature";

  bool context_is_checked = 14958;
  bool enabled = 11983;
}

// CipherSuite is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message CipherSuite {
  option (resource_type_names) = "CipherSuite";
  option (resource_type_names) = "Functionality";

  // for example: RSA, ECDSA
  string authentication_mechanism = 3667;
  string key_exchange_algorithm = 14920;
  // naming schema: SHA-256
  string mac_algorithm = 2344;
  // naming schema: AES-128-GCM
  string session_cipher = 5742;
}

// CloudResource is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message CloudResource {
  oneof type {
    Account account = 17437;
    Job job = 7413;
    Workflow workflow = 6742;
    Container container = 3283;
    Function function = 14517;
    VirtualMachine virtual_machine = 8578;
    ContainerOrchestration container_orchestration = 11038;
    ContainerRegistry container_registry = 14766;
    Certificate certificate = 9607;
    Key key = 3816;
    Secret secret = 2689;
    Identity identity = 6150;
    RoleAssignment role_assignment = 8031;
    ContainerImage container_image = 14207;
    VMImage vm_image = 8383;
    DeviceProvisioningService device_provisioning_service = 9517;
    MessagingHub messaging_hub = 13990;
    KeyVault key_vault = 10449;
    Workspace workspace = 16617;
    NetworkInterface network_interface = 5016;
    NetworkSecurityGroup network_security_group = 13367;
    FunctionService function_service = 4702;
    GenericNetworkService generic_network_service = 566;
    LoadBalancer load_balancer = 2870;
    LoggingService logging_service = 18789;
    SecurityAdvisoryService security_advisory_service = 5331;
    DocumentDatabaseService document_database_service = 12515;
    KeyValueDatabaseService key_value_database_service = 1496;
    MultiModalDatabaseService multi_modal_database_service = 3152;
    RelationalDatabaseService relational_database_service = 15823;
    FileStorageService file_storage_service = 12635;
    ObjectStorageService object_storage_service = 10175;
    VirtualNetwork virtual_network = 9531;
    VirtualSubNetwork virtual_sub_network = 16126;
    PasswordPolicy password_policy = 6125;
    ResourceGroup resource_group = 3664;
    BlockStorage block_storage = 9808;
    DatabaseStorage database_storage = 10098;
    FileStorage file_storage = 18252;
    ObjectStorage object_storage = 7943;
  }
}

// CloudSDK is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message CloudSDK {
  option (resource_type_names) = "CloudSDK";
  option (resource_type_names) = "Framework";
}

// Compute is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message Compute {
  oneof type {
    Container container = 3283;
    Function function = 14517;
    VirtualMachine virtual_machine = 8578;
  }
}

// Confidentiality is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message Confidentiality {
  oneof type {
    CustomerKeyEncryption customer_key_encryption = 5547;
    ManagedKeyEncryption managed_key_encryption = 9197;
    EncryptionInUse encryption_in_use = 15775;
    TransportEncryption transport_encryption = 15929;
  }
}

// Container is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message Container {
  option (resource_type_names) = "Container";
  option (resource_type_names) = "Compute";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 10331;
  string id = 3838 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 1246;
  map<string, string> labels = 16192;
  string name = 555 [(buf.validate.field).required = true];
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 7483;
  EncryptionInUse encryption_in_use = 8412;
  GeoLocation geo_location = 18890;
  optional string image_id = 10253;
  repeated string network_interface_ids = 10038;
  repeated Redundancy redundancies = 9567;
  RemoteAttestation remote_attestation = 3808;
  optional string parent_id = 8896;
  ResourceLogging resource_logging = 6433;
  UsageStatistics usage_statistics = 10334;
}

// ContainerImage is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message ContainerImage {
  option (resource_type_names) = "ContainerImage";
  option (resource_type_names) = "Image";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 13628;
  string id = 11254 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 12311;
  map<string, string> labels = 1165;
  string name = 16201 [(buf.validate.field).required = true];
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 1312;
  optional string application_id = 9541;
  GeoLocation geo_location = 17724;
  repeated Redundancy redundancies = 16029;
  optional string parent_id = 18431;
  UsageStatistics usage_statistics = 10911;
}

// ContainerOrchestration is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message ContainerOrchestration {
  option (resource_type_names) = "ContainerOrchestration";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 8707;
  string id = 4734 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 12793;
  map<string, string> labels = 17989;
  string management_url = 5478;
  string name = 12537 [(buf.validate.field).required = true];
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 5616;
  repeated string container_ids = 6707;
  GeoLocation geo_location = 10673;
  repeated Redundancy redundancies = 18991;
  optional string parent_id = 4039;
  ResourceLogging resource_logging = 15559;
  UsageStatistics usage_statistics = 1050;
}

// ContainerRegistry is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message ContainerRegistry {
  option (resource_type_names) = "ContainerRegistry";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 14288;
  string id = 11167 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 3229;
  map<string, string> labels = 17626;
  string name = 13256 [(buf.validate.field).required = true];
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 13355;
  GeoLocation geo_location = 8442;
  repeated Redundancy redundancies = 4008;
  optional string parent_id = 7454;
  UsageStatistics usage_statistics = 5058;
}

// Credential is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message Credential {
  oneof type {
    Certificate certificate = 9607;
    Key key = 3816;
    Secret secret = 2689;
  }
}

// DocumentChecksum is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message DocumentChecksum {
  option (resource_type_names) = "DocumentChecksum";
  option (resource_type_names) = "Integrity";
  option (resource_type_names) = "SecurityFeature";

  string algorithm = 943;
  repeated Error errors = 17465;
}

// CustomerKeyEncryption is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message CustomerKeyEncryption {
  option (resource_type_names) = "CustomerKeyEncryption";
  option (resource_type_names) = "AtRestEncryption";
  option (resource_type_names) = "Confidentiality";
  option (resource_type_names) = "SecurityFeature";

  string algorithm = 14884;
  bool enabled = 12751;
  string key_url = 6413;
}

// DDoSProtection is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message DDoSProtection {
  option (resource_type_names) = "DDoSProtection";
  option (resource_type_names) = "Availability";
  option (resource_type_names) = "SecurityFeature";
}

// DatabaseConnect is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message DatabaseConnect {
  option (resource_type_names) = "DatabaseConnect";
  option (resource_type_names) = "DatabaseOperation";
  option (resource_type_names) = "Operation";
  option (resource_type_names) = "Functionality";

  repeated string calls = 12922;
  repeated string database_service_ids = 5749;
  optional string database_storage_id = 3674;
}

// DatabaseOperation is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message DatabaseOperation {
  oneof type {
    DatabaseConnect database_connect = 10798;
    DatabaseQuery database_query = 7698;
  }
}

// DatabaseQuery is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message DatabaseQuery {
  option (resource_type_names) = "DatabaseQuery";
  option (resource_type_names) = "DatabaseOperation";
  option (resource_type_names) = "Operation";
  option (resource_type_names) = "Functionality";

  repeated string calls = 7647;
  bool modify = 7601;
  repeated string database_service_ids = 14358;
  optional string database_storage_id = 17880;
}

// DatabaseService is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
// This class represents a database service. For example, a postgres SQL server would be modelled as a database service (with a host and IP) and the individual tables or collections would be modelled as a DatabaseStorage entity.
message DatabaseService {
  oneof type {
    DocumentDatabaseService document_database_service = 12515;
    KeyValueDatabaseService key_value_database_service = 1496;
    MultiModalDatabaseService multi_modal_database_service = 3152;
    RelationalDatabaseService relational_database_service = 15823;
  }
}

// DatabaseStorage is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
// describes the actual database or a table in a database
message DatabaseStorage {
  option (resource_type_names) = "DatabaseStorage";
  option (resource_type_names) = "Storage";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 3373;
  string id = 17278 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 2642;
  map<string, string> labels = 307;
  string name = 7187 [(buf.validate.field).required = true];
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 3078;
  AtRestEncryption at_rest_encryption = 16707;
  repeated Backup backups = 14945;
  GeoLocation geo_location = 9489;
  Immutability immutability = 6352;
  repeated Redundancy redundancies = 9159;
  optional string parent_id = 16116;
  ResourceLogging resource_logging = 17897;
  UsageStatistics usage_statistics = 3330;
}

// DeviceProvisioningService is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message DeviceProvisioningService {
  option (resource_type_names) = "DeviceProvisioningService";
  option (resource_type_names) = "IoT";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 6351;
  string id = 18289 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 1039;
  map<string, string> labels = 14958;
  string name = 12314 [(buf.validate.field).required = true];
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 3194;
  GeoLocation geo_location = 4380;
  repeated Redundancy redundancies = 1685;
  optional string parent_id = 1119;
  UsageStatistics usage_statistics = 5589;
}

// Document is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
// path: Describes either local path or path in URL format
message Document {
  oneof type {
    GenericDocument generic_document = 5702;
    SecurityAdvisoryDocument security_advisory_document = 8513;
    ServiceMetadataDocument service_metadata_document = 13959;
  }
}

// DocumentDatabaseService is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message DocumentDatabaseService {
  option (resource_type_names) = "DocumentDatabaseService";
  option (resource_type_names) = "DatabaseService";
  option (resource_type_names) = "StorageService";
  option (resource_type_names) = "NetworkService";
  option (resource_type_names) = "Networking";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 10393;
  string id = 18752 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 14449;
  repeated string ips = 2939;
  map<string, string> labels = 16894;
  string name = 3590 [(buf.validate.field).required = true];
  repeated uint32 ports = 348;
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 14860;
  repeated AnomalyDetection anomaly_detections = 11802;
  Authenticity authenticity = 12379;
  optional string compute_id = 16245;
  GeoLocation geo_location = 12834;
  HttpEndpoint http_endpoint = 2221;
  MalwareProtection malware_protection = 7465;
  repeated Redundancy redundancies = 14617;
  optional string parent_id = 13812;
  optional string service_metadata_document_id = 16604;
  repeated string storage_ids = 17749;
  TransportEncryption transport_encryption = 10958;
  UsageStatistics usage_statistics = 16899;
}

// DocumentLocation is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message DocumentLocation {
  oneof type {
    LocalDocumentLocation local_document_location = 10096;
    RemoteDocumentLocation remote_document_location = 9297;
  }
}

// EncryptionInUse is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message EncryptionInUse {
  option (resource_type_names) = "EncryptionInUse";
  option (resource_type_names) = "Confidentiality";
  option (resource_type_names) = "SecurityFeature";

  bool enabled = 8542;
}

// Error is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message Error {
  option (resource_type_names) = "Error";
  option (resource_type_names) = "Functionality";

  string message = 3497;
}

// FileStorage is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message FileStorage {
  option (resource_type_names) = "FileStorage";
  option (resource_type_names) = "Storage";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 17100;
  string id = 11922 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 14761;
  map<string, string> labels = 12349;
  string name = 7889 [(buf.validate.field).required = true];
  bool public_access = 12636;
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 11570;
  AtRestEncryption at_rest_encryption = 2585;
  repeated Backup backups = 3460;
  GeoLocation geo_location = 3034;
  Immutability immutability = 2477;
  repeated Redundancy redundancies = 12632;
  optional string parent_id = 15505;
  ResourceLogging resource_logging = 11370;
  UsageStatistics usage_statistics = 16370;
}

// FileStorageService is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
// An file storage service represents the network service that is used to access a list of file storage shares. The storage itself is modelled as a FileStorage. The service has an http endpoint.
message FileStorageService {
  option (resource_type_names) = "FileStorageService";
  option (resource_type_names) = "StorageService";
  option (resource_type_names) = "NetworkService";
  option (resource_type_names) = "Networking";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 9911;
  string id = 14877 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 9936;
  repeated string ips = 17906;
  map<string, string> labels = 1881;
  string name = 6893 [(buf.validate.field).required = true];
  repeated uint32 ports = 4262;
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 17481;
  Authenticity authenticity = 2547;
  optional string compute_id = 11786;
  GeoLocation geo_location = 12957;
  HttpEndpoint http_endpoint = 11768;
  repeated Redundancy redundancies = 10567;
  optional string parent_id = 191;
  optional string service_metadata_document_id = 11554;
  repeated string storage_ids = 17502;
  TransportEncryption transport_encryption = 3840;
  UsageStatistics usage_statistics = 6712;
}

// Firewall is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message Firewall {
  oneof type {
    L3Firewall l3_firewall = 9125;
    WebApplicationFirewall web_application_firewall = 5789;
  }
}

// Framework is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message Framework {
  oneof type {
    CloudSDK cloud_sdk = 776;
    HttpClientLibrary http_client_library = 12339;
    HttpServer http_server = 12938;
    Logger logger = 17354;
  }
}

// Function is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message Function {
  option (resource_type_names) = "Function";
  option (resource_type_names) = "Compute";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 10954;
  string id = 5623 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 14103;
  map<string, string> labels = 13050;
  string name = 1045 [(buf.validate.field).required = true];
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 10341;
  string runtime_language = 1217;
  string runtime_version = 10608;
  EncryptionInUse encryption_in_use = 16114;
  GeoLocation geo_location = 17225;
  repeated string network_interface_ids = 716;
  repeated Redundancy redundancies = 3713;
  RemoteAttestation remote_attestation = 838;
  optional string parent_id = 18299;
  ResourceLogging resource_logging = 108;
  UsageStatistics usage_statistics = 570;
}

// FunctionService is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message FunctionService {
  option (resource_type_names) = "FunctionService";
  option (resource_type_names) = "NetworkService";
  option (resource_type_names) = "Networking";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 16586;
  string id = 2255 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 9619;
  repeated string ips = 18904;
  map<string, string> labels = 12886;
  string name = 18288 [(buf.validate.field).required = true];
  repeated uint32 ports = 12721;
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 12241;
  Authenticity authenticity = 2900;
  optional string compute_id = 6285;
  repeated string function_ids = 15079;
  GeoLocation geo_location = 7943;
  repeated Redundancy redundancies = 13018;
  optional string parent_id = 12686;
  optional string service_metadata_document_id = 5329;
  TransportEncryption transport_encryption = 3947;
  UsageStatistics usage_statistics = 17308;
}

// Functionality is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message Functionality {
  oneof type {
    CipherSuite cipher_suite = 11132;
    LocalDocumentLocation local_document_location = 10096;
    RemoteDocumentLocation remote_document_location = 9297;
    Error error = 6544;
    HttpEndpoint http_endpoint = 4266;
    HttpRequestHandler http_request_handler = 7403;
    DatabaseConnect database_connect = 10798;
    DatabaseQuery database_query = 7698;
    HttpRequest http_request = 2901;
    LogOperation log_operation = 14250;
    ObjectStorageRequest object_storage_request = 16887;
    SchemaValidation schema_validation = 16331;
    SecurityAdvisoryFeed security_advisory_feed = 13903;
  }
}

// GenericDocument is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
// This is a placeholder for all other documents, e.g. index.txt
message GenericDocument {
  option (resource_type_names) = "GenericDocument";
  option (resource_type_names) = "Document";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 11055;
  string filetype = 4013;
  string id = 11297 [(buf.validate.field).required = true];
  map<string, string> labels = 9013;
  string name = 5165 [(buf.validate.field).required = true];
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 2153;
  repeated DocumentChecksum document_checksums = 14501;
  DocumentLocation document_location = 7961;
  repeated DocumentSignature document_signatures = 16971;
  optional string parent_id = 10767;
  SchemaValidation schema_validation = 15254;
  repeated SecurityFeature security_features = 1202;
}

// GenericNetworkService is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
// A generic network service.
message GenericNetworkService {
  option (resource_type_names) = "GenericNetworkService";
  option (resource_type_names) = "NetworkService";
  option (resource_type_names) = "Networking";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 4666;
  string id = 16446 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 6477;
  repeated string ips = 10719;
  map<string, string> labels = 18797;
  string name = 3969 [(buf.validate.field).required = true];
  repeated uint32 ports = 12997;
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 8508;
  Authenticity authenticity = 9951;
  optional string compute_id = 4056;
  GeoLocation geo_location = 13785;
  repeated Redundancy redundancies = 1061;
  optional string parent_id = 15185;
  optional string service_metadata_document_id = 12988;
  TransportEncryption transport_encryption = 3091;
  UsageStatistics usage_statistics = 18497;
}

// GeoLocation is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message GeoLocation {
  option (resource_type_names) = "GeoLocation";
  option (resource_type_names) = "Availability";
  option (resource_type_names) = "SecurityFeature";

  string region = 7708;
}

// GeoRedundancy is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message GeoRedundancy {
  option (resource_type_names) = "GeoRedundancy";
  option (resource_type_names) = "Redundancy";
  option (resource_type_names) = "Availability";
  option (resource_type_names) = "SecurityFeature";

  repeated GeoLocation geo_locations = 13910;
}

// HttpClientLibrary is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message HttpClientLibrary {
  option (resource_type_names) = "HttpClientLibrary";
  option (resource_type_names) = "Framework";
}

// HttpEndpoint is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
// An HTTP endpoint can set the "proxyTarget" property, in case that is routed through a (reverse) proxy, e.g. a load balancer.
// Via the Authenticity relationship, the access type can be specified, e.g. public access (no authentication), password-based, etc.
message HttpEndpoint {
  option (resource_type_names) = "HttpEndpoint";
  option (resource_type_names) = "Functionality";

  string handler = 9890;
  string method = 125;
  string path = 17149;
  string url = 8687;
  Authenticity authenticity = 18568;
  TransportEncryption transport_encryption = 12277;
}

// HttpRequest is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message HttpRequest {
  option (resource_type_names) = "HttpRequest";
  option (resource_type_names) = "Operation";
  option (resource_type_names) = "Functionality";

  string call = 3127;
  string req_body = 14536;
  repeated HttpEndpoint http_endpoints = 8204;
}

// HttpRequestHandler is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message HttpRequestHandler {
  option (resource_type_names) = "HttpRequestHandler";
  option (resource_type_names) = "Functionality";

  string path = 3307;
  optional string application_id = 9918;
  repeated HttpEndpoint http_endpoints = 8938;
}

// HttpServer is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message HttpServer {
  option (resource_type_names) = "HttpServer";
  option (resource_type_names) = "Framework";

  HttpRequestHandler http_request_handler = 18811;
}

// Identifiable is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message Identifiable {
  oneof type {
    Identity identity = 6150;
    RoleAssignment role_assignment = 8031;
  }
}

// Identity is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message Identity {
  option (resource_type_names) = "Identity";
  option (resource_type_names) = "Identifiable";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  bool activated = 6238;
  google.protobuf.Timestamp creation_time = 10648;
  bool disable_password_policy = 15260;
  bool enforce_mfa = 15546;
  string id = 1772 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 15191;
  map<string, string> labels = 13041;
  google.protobuf.Timestamp last_activity = 9845;
  bool login_defender_enabled = 7532;
  string name = 12749 [(buf.validate.field).required = true];
  bool privileged = 15283;
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 17916;
  Authenticity authenticity = 2372;
  Authorization authorization = 11513;
  GeoLocation geo_location = 17314;
  repeated Redundancy redundancies = 7944;
  optional string parent_id = 9539;
  UsageStatistics usage_statistics = 15350;
}

// Image is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message Image {
  oneof type {
    ContainerImage container_image = 14207;
    VMImage vm_image = 8383;
  }
}

// Immutability is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message Immutability {
  option (resource_type_names) = "Immutability";
  option (resource_type_names) = "Integrity";
  option (resource_type_names) = "SecurityFeature";

  bool enabled = 1859;
}

// Integrity is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message Integrity {
  oneof type {
    LocalAttestation local_attestation = 4296;
    RemoteAttestation remote_attestation = 13640;
    AutomaticUpdates automatic_updates = 9990;
    DocumentChecksum document_checksum = 16099;
    Immutability immutability = 2008;
    DocumentSignature document_signature = 7943;
  }
}

// IoT is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message IoT {
  oneof type {
    DeviceProvisioningService device_provisioning_service = 9517;
    MessagingHub messaging_hub = 13990;
  }
}

// Job is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message Job {
  option (resource_type_names) = "Job";
  option (resource_type_names) = "CICDService";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 9295;
  string id = 10331 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 13034;
  map<string, string> labels = 14984;
  string name = 14086 [(buf.validate.field).required = true];
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 10097;
  GeoLocation geo_location = 15488;
  repeated Redundancy redundancies = 2651;
  optional string parent_id = 727;
  UsageStatistics usage_statistics = 16581;
}

// TokenBasedAuthentication is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message TokenBasedAuthentication {
  option (resource_type_names) = "TokenBasedAuthentication";
  option (resource_type_names) = "Authenticity";
  option (resource_type_names) = "SecurityFeature";

  bool context_is_checked = 1232;
  bool enabled = 10600;
  bool enforced = 6934;
}

// Key is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message Key {
  option (resource_type_names) = "Key";
  option (resource_type_names) = "Credential";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  string algorithm = 4231;
  google.protobuf.Timestamp creation_time = 3669;
  bool enabled = 14125;
  google.protobuf.Timestamp expiration_date = 738;
  string id = 15178 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 1456;
  bool is_managed = 17485;
  int32 key_size = 11830;
  map<string, string> labels = 5420;
  string name = 3396 [(buf.validate.field).required = true];
  google.protobuf.Timestamp not_before_date = 11230;
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 15275;
  optional string cloud_resource_id = 6990;
  GeoLocation geo_location = 16438;
  repeated Redundancy redundancies = 5607;
  optional string parent_id = 11867;
  UsageStatistics usage_statistics = 14393;
}

// KeyValueDatabaseService is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message KeyValueDatabaseService {
  option (resource_type_names) = "KeyValueDatabaseService";
  option (resource_type_names) = "DatabaseService";
  option (resource_type_names) = "StorageService";
  option (resource_type_names) = "NetworkService";
  option (resource_type_names) = "Networking";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 14330;
  string id = 11525 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 14156;
  repeated string ips = 7691;
  map<string, string> labels = 10762;
  string name = 11005 [(buf.validate.field).required = true];
  repeated uint32 ports = 16482;
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 110;
  repeated AnomalyDetection anomaly_detections = 263;
  Authenticity authenticity = 8507;
  optional string compute_id = 3991;
  GeoLocation geo_location = 6260;
  HttpEndpoint http_endpoint = 1138;
  MalwareProtection malware_protection = 9718;
  repeated Redundancy redundancies = 13218;
  optional string parent_id = 1064;
  optional string service_metadata_document_id = 2068;
  repeated string storage_ids = 3815;
  TransportEncryption transport_encryption = 11847;
  UsageStatistics usage_statistics = 11136;
}

// KeyVault is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message KeyVault {
  option (resource_type_names) = "KeyVault";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 4986;
  string id = 11422 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 16240;
  map<string, string> labels = 18399;
  string name = 16066 [(buf.validate.field).required = true];
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 6701;
  repeated string credential_ids = 12221;
  GeoLocation geo_location = 12425;
  repeated Redundancy redundancies = 7919;
  optional string parent_id = 13672;
  UsageStatistics usage_statistics = 17562;
}

// L3Firewall is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message L3Firewall {
  option (resource_type_names) = "L3Firewall";
  option (resource_type_names) = "Firewall";
  option (resource_type_names) = "AccessRestriction";
  option (resource_type_names) = "Authorization";
  option (resource_type_names) = "SecurityFeature";

  bool enabled = 9476;
  bool inbound = 1000;
  string restricted_ports = 7341;
}

// LoadBalancer is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
// A Load Balancer may have multiple access restriction features, e.g. a L3 firewall and a WAF
message LoadBalancer {
  option (resource_type_names) = "LoadBalancer";
  option (resource_type_names) = "NetworkService";
  option (resource_type_names) = "Networking";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 14747;
  string id = 11571 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 17456;
  repeated string ips = 5649;
  map<string, string> labels = 9111;
  string name = 9407 [(buf.validate.field).required = true];
  repeated uint32 ports = 17344;
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 759;
  string url = 4414;
  AccessRestriction access_restriction = 13606;
  Authenticity authenticity = 11384;
  optional string compute_id = 8137;
  GeoLocation geo_location = 3332;
  repeated HttpEndpoint http_endpoints = 11283;
  repeated string network_service_ids = 11073;
  repeated Redundancy redundancies = 4003;
  optional string parent_id = 14869;
  optional string service_metadata_document_id = 18506;
  TransportEncryption transport_encryption = 18363;
  UsageStatistics usage_statistics = 5248;
}

// LocalAttestation is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message LocalAttestation {
  option (resource_type_names) = "LocalAttestation";
  option (resource_type_names) = "Attestation";
  option (resource_type_names) = "Integrity";
  option (resource_type_names) = "SecurityFeature";

  bool enabled = 12670;
}

// LocalDocumentLocation is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message LocalDocumentLocation {
  option (resource_type_names) = "LocalDocumentLocation";
  option (resource_type_names) = "DocumentLocation";
  option (resource_type_names) = "Functionality";

  string path = 5788;
  AtRestEncryption at_rest_encryption = 47;
}

// LocalRedundancy is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message LocalRedundancy {
  option (resource_type_names) = "LocalRedundancy";
  option (resource_type_names) = "Redundancy";
  option (resource_type_names) = "Availability";
  option (resource_type_names) = "SecurityFeature";

  repeated GeoLocation geo_locations = 5006;
}

// LogOperation is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
// A LogOperation is used by an application
message LogOperation {
  option (resource_type_names) = "LogOperation";
  option (resource_type_names) = "Operation";
  option (resource_type_names) = "Functionality";

  string call = 6418;
  string value = 7549;
  Logging logging = 12393;
}

// Logger is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message Logger {
  option (resource_type_names) = "Logger";
  option (resource_type_names) = "Framework";
}

// Logging is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message Logging {
  oneof type {
    ActivityLogging activity_logging = 2956;
    ApplicationLogging application_logging = 12791;
    BootLogging boot_logging = 18439;
    OSLogging os_logging = 2926;
    ResourceLogging resource_logging = 17563;
  }
}

// LoggingService is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
// A logging-as-a-service offering, e.g. for analyzing logs; has a Storage resource that stores the logs
message LoggingService {
  option (resource_type_names) = "LoggingService";
  option (resource_type_names) = "NetworkService";
  option (resource_type_names) = "Networking";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 7970;
  string id = 5915 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 13509;
  repeated string ips = 11852;
  map<string, string> labels = 12184;
  string name = 5664 [(buf.validate.field).required = true];
  repeated uint32 ports = 5093;
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 4987;
  Authenticity authenticity = 14232;
  optional string compute_id = 9165;
  GeoLocation geo_location = 12153;
  repeated Redundancy redundancies = 3473;
  optional string parent_id = 12905;
  optional string service_metadata_document_id = 17927;
  repeated string storage_ids = 13225;
  TransportEncryption transport_encryption = 11141;
  UsageStatistics usage_statistics = 5443;
}

// MachineLearning is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message MachineLearning {
  oneof type {
    Workspace workspace = 16617;
  }
}

// MalwareProtection is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
// analyzes the activity within a Compute resource
message MalwareProtection {
  option (resource_type_names) = "MalwareProtection";
  option (resource_type_names) = "Auditing";
  option (resource_type_names) = "SecurityFeature";

  google.protobuf.Duration duration_since_active = 18754;
  bool enabled = 18004;
  int32 number_of_threats_found = 11973;
  ApplicationLogging application_logging = 8181;
}

// ManagedKeyEncryption is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message ManagedKeyEncryption {
  option (resource_type_names) = "ManagedKeyEncryption";
  option (resource_type_names) = "AtRestEncryption";
  option (resource_type_names) = "Confidentiality";
  option (resource_type_names) = "SecurityFeature";

  string algorithm = 2563;
  bool enabled = 18264;
  string key_url = 16266;
}

// MessagingHub is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message MessagingHub {
  option (resource_type_names) = "MessagingHub";
  option (resource_type_names) = "IoT";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 7042;
  string id = 2653 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 7321;
  map<string, string> labels = 10843;
  string name = 15845 [(buf.validate.field).required = true];
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 13542;
  GeoLocation geo_location = 16016;
  repeated Redundancy redundancies = 13220;
  optional string parent_id = 14473;
  UsageStatistics usage_statistics = 9599;
}

// MultiFactorAuthentiation is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message MultiFactorAuthentiation {
  option (resource_type_names) = "MultiFactorAuthentiation";
  option (resource_type_names) = "Authenticity";
  option (resource_type_names) = "SecurityFeature";

  bool context_is_checked = 17335;
  repeated Authenticity authenticities = 14915;
}

// MultiModalDatabaseService is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
// This class represents a database service that identifies itself as "multi-model", e.g., offers document storage as well as relational features.
message MultiModalDatabaseService {
  option (resource_type_names) = "MultiModalDatabaseService";
  option (resource_type_names) = "DatabaseService";
  option (resource_type_names) = "StorageService";
  option (resource_type_names) = "NetworkService";
  option (resource_type_names) = "Networking";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 8494;
  string id = 9603 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 2909;
  repeated string ips = 11563;
  map<string, string> labels = 6036;
  string name = 7401 [(buf.validate.field).required = true];
  repeated uint32 ports = 13495;
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 6033;
  repeated AnomalyDetection anomaly_detections = 18814;
  Authenticity authenticity = 11928;
  optional string compute_id = 17860;
  GeoLocation geo_location = 15576;
  HttpEndpoint http_endpoint = 17570;
  MalwareProtection malware_protection = 12713;
  repeated Redundancy redundancies = 7593;
  optional string parent_id = 15037;
  optional string service_metadata_document_id = 15397;
  repeated string storage_ids = 10094;
  TransportEncryption transport_encryption = 2348;
  UsageStatistics usage_statistics = 16834;
}

// NetworkInterface is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message NetworkInterface {
  option (resource_type_names) = "NetworkInterface";
  option (resource_type_names) = "Networking";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 8612;
  string id = 6736 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 18092;
  map<string, string> labels = 12198;
  string name = 3165 [(buf.validate.field).required = true];
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 10688;
  AccessRestriction access_restriction = 1855;
  GeoLocation geo_location = 2870;
  optional string network_service_id = 11340;
  repeated Redundancy redundancies = 10413;
  optional string parent_id = 5675;
  UsageStatistics usage_statistics = 3468;
}

// NetworkSecurityGroup is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message NetworkSecurityGroup {
  option (resource_type_names) = "NetworkSecurityGroup";
  option (resource_type_names) = "Networking";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 7773;
  string id = 494 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 6113;
  map<string, string> labels = 7675;
  string name = 4901 [(buf.validate.field).required = true];
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 18744;
  GeoLocation geo_location = 10667;
  repeated Redundancy redundancies = 13566;
  optional string parent_id = 12335;
  UsageStatistics usage_statistics = 9366;
}

// NetworkService is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
// A NetworkService is an application (on the network layer) running on a Compute resource. It provides access to a resource
// has: Compute instance the network service is running on. This can also be a compute resource within the cloud provider itself if it is a managed service (e.g. Azure App Service)
message NetworkService {
  oneof type {
    FunctionService function_service = 4702;
    GenericNetworkService generic_network_service = 566;
    LoadBalancer load_balancer = 2870;
    LoggingService logging_service = 18789;
    SecurityAdvisoryService security_advisory_service = 5331;
    DocumentDatabaseService document_database_service = 12515;
    KeyValueDatabaseService key_value_database_service = 1496;
    MultiModalDatabaseService multi_modal_database_service = 3152;
    RelationalDatabaseService relational_database_service = 15823;
    FileStorageService file_storage_service = 12635;
    ObjectStorageService object_storage_service = 10175;
  }
}

// Networking is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message Networking {
  oneof type {
    NetworkInterface network_interface = 5016;
    NetworkSecurityGroup network_security_group = 13367;
    FunctionService function_service = 4702;
    GenericNetworkService generic_network_service = 566;
    LoadBalancer load_balancer = 2870;
    LoggingService logging_service = 18789;
    SecurityAdvisoryService security_advisory_service = 5331;
    DocumentDatabaseService document_database_service = 12515;
    KeyValueDatabaseService key_value_database_service = 1496;
    MultiModalDatabaseService multi_modal_database_service = 3152;
    RelationalDatabaseService relational_database_service = 15823;
    FileStorageService file_storage_service = 12635;
    ObjectStorageService object_storage_service = 10175;
    VirtualNetwork virtual_network = 9531;
    VirtualSubNetwork virtual_sub_network = 16126;
  }
}

// NoAuthentication is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message NoAuthentication {
  option (resource_type_names) = "NoAuthentication";
  option (resource_type_names) = "Authenticity";
  option (resource_type_names) = "SecurityFeature";

  bool context_is_checked = 12023;
}

// OSLogging is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message OSLogging {
  option (resource_type_names) = "OSLogging";
  option (resource_type_names) = "Logging";
  option (resource_type_names) = "Auditing";
  option (resource_type_names) = "SecurityFeature";

  bool enabled = 207;
  bool monitoring_log_data_enabled = 12434;
  google.protobuf.Duration retention_period = 11358;
  bool security_alerts_enabled = 7453;
  repeated string logging_service_ids = 10850;
}

// OTPBasedAuthentication is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message OTPBasedAuthentication {
  option (resource_type_names) = "OTPBasedAuthentication";
  option (resource_type_names) = "Authenticity";
  option (resource_type_names) = "SecurityFeature";

  bool activated = 7456;
  bool context_is_checked = 18913;
}

// ObjectStorage is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message ObjectStorage {
  option (resource_type_names) = "ObjectStorage";
  option (resource_type_names) = "Storage";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 18733;
  string id = 18600 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 13767;
  map<string, string> labels = 15615;
  string name = 9198 [(buf.validate.field).required = true];
  bool public_access = 4193;
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 12058;
  AtRestEncryption at_rest_encryption = 10702;
  repeated Backup backups = 699;
  GeoLocation geo_location = 3591;
  Immutability immutability = 16586;
  repeated Redundancy redundancies = 733;
  optional string parent_id = 2826;
  ResourceLogging resource_logging = 11108;
  UsageStatistics usage_statistics = 13344;
}

// ObjectStorageRequest is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message ObjectStorageRequest {
  option (resource_type_names) = "ObjectStorageRequest";
  option (resource_type_names) = "Operation";
  option (resource_type_names) = "Functionality";

  string source = 178;
  repeated string object_storage_ids = 2364;
}

// ObjectStorageService is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
// An object storage service represents the network service that is used to access a list of object storage containers. The storage itself is modelled as a ObjectStorage. The service has an http endpoint.
message ObjectStorageService {
  option (resource_type_names) = "ObjectStorageService";
  option (resource_type_names) = "StorageService";
  option (resource_type_names) = "NetworkService";
  option (resource_type_names) = "Networking";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 1606;
  string id = 2866 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 15453;
  repeated string ips = 13718;
  map<string, string> labels = 3100;
  string name = 14501 [(buf.validate.field).required = true];
  repeated uint32 ports = 10724;
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 17755;
  Authenticity authenticity = 17321;
  optional string compute_id = 9149;
  GeoLocation geo_location = 14794;
  HttpEndpoint http_endpoint = 1555;
  repeated Redundancy redundancies = 12293;
  optional string parent_id = 14284;
  optional string service_metadata_document_id = 10332;
  repeated string storage_ids = 1275;
  TransportEncryption transport_encryption = 9055;
  UsageStatistics usage_statistics = 15376;
}

// Operation is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message Operation {
  oneof type {
    DatabaseConnect database_connect = 10798;
    DatabaseQuery database_query = 7698;
    HttpRequest http_request = 2901;
    LogOperation log_operation = 14250;
    ObjectStorageRequest object_storage_request = 16887;
  }
}

// PasswordBasedAuthentication is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message PasswordBasedAuthentication {
  option (resource_type_names) = "PasswordBasedAuthentication";
  option (resource_type_names) = "Authenticity";
  option (resource_type_names) = "SecurityFeature";

  bool activated = 11798;
  bool context_is_checked = 1362;
}

// PasswordPolicy is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message PasswordPolicy {
  option (resource_type_names) = "PasswordPolicy";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 7612;
  string id = 10994 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 12677;
  map<string, string> labels = 10695;
  string name = 13746 [(buf.validate.field).required = true];
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 8182;
  GeoLocation geo_location = 7446;
  repeated Redundancy redundancies = 5543;
  optional string parent_id = 4197;
  UsageStatistics usage_statistics = 16688;
}

// RBAC is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message RBAC {
  option (resource_type_names) = "RBAC";
  option (resource_type_names) = "Authorization";
  option (resource_type_names) = "SecurityFeature";

  // see Privacy Smells: Detecting Privacy Problems in Cloud Architectures (2020)
  float broad_assignments = 5678;
  // see Privacy Smells: Detecting Privacy Problems in Cloud Architectures (2020)
  float mixed_duties = 14446;
}

// Redundancy is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message Redundancy {
  oneof type {
    GeoRedundancy geo_redundancy = 2436;
    LocalRedundancy local_redundancy = 2537;
    ZoneRedundancy zone_redundancy = 11145;
  }
}

// RelationalDatabaseService is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message RelationalDatabaseService {
  option (resource_type_names) = "RelationalDatabaseService";
  option (resource_type_names) = "DatabaseService";
  option (resource_type_names) = "StorageService";
  option (resource_type_names) = "NetworkService";
  option (resource_type_names) = "Networking";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 2641;
  string id = 2807 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 927;
  repeated string ips = 11162;
  map<string, string> labels = 8122;
  string name = 14579 [(buf.validate.field).required = true];
  repeated uint32 ports = 6009;
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 6491;
  repeated AnomalyDetection anomaly_detections = 11551;
  Authenticity authenticity = 17341;
  optional string compute_id = 12144;
  GeoLocation geo_location = 1976;
  HttpEndpoint http_endpoint = 13261;
  MalwareProtection malware_protection = 5043;
  repeated Redundancy redundancies = 8749;
  optional string parent_id = 18032;
  optional string service_metadata_document_id = 14298;
  repeated string storage_ids = 16547;
  TransportEncryption transport_encryption = 4413;
  UsageStatistics usage_statistics = 12333;
}

// RemoteAttestation is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message RemoteAttestation {
  option (resource_type_names) = "RemoteAttestation";
  option (resource_type_names) = "Attestation";
  option (resource_type_names) = "Integrity";
  option (resource_type_names) = "SecurityFeature";

  google.protobuf.Timestamp creation_time = 7501;
  bool enabled = 1238;
  bool status = 9341;
}

// RemoteDocumentLocation is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message RemoteDocumentLocation {
  option (resource_type_names) = "RemoteDocumentLocation";
  option (resource_type_names) = "DocumentLocation";
  option (resource_type_names) = "Functionality";

  string path = 1220;
  Authenticity authenticity = 8682;
  TransportEncryption transport_encryption = 17914;
}

// ResourceGroup is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message ResourceGroup {
  option (resource_type_names) = "ResourceGroup";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 7407;
  string id = 10958 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 15317;
  map<string, string> labels = 10108;
  string name = 17266 [(buf.validate.field).required = true];
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 15866;
  GeoLocation geo_location = 3810;
  repeated Redundancy redundancies = 13936;
  optional string parent_id = 13947;
  UsageStatistics usage_statistics = 4077;
}

// ResourceLogging is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message ResourceLogging {
  option (resource_type_names) = "ResourceLogging";
  option (resource_type_names) = "Logging";
  option (resource_type_names) = "Auditing";
  option (resource_type_names) = "SecurityFeature";

  bool enabled = 1509;
  bool monitoring_log_data_enabled = 6804;
  google.protobuf.Duration retention_period = 6776;
  bool security_alerts_enabled = 6099;
  repeated string logging_service_ids = 15310;
}

// RoleAssignment is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message RoleAssignment {
  option (resource_type_names) = "RoleAssignment";
  option (resource_type_names) = "Identifiable";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  bool activated = 9376;
  google.protobuf.Timestamp creation_time = 1871;
  string id = 17304 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 12914;
  map<string, string> labels = 11081;
  string name = 12020 [(buf.validate.field).required = true];
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 8868;
  Authenticity authenticity = 11419;
  Authorization authorization = 1832;
  GeoLocation geo_location = 10851;
  repeated Redundancy redundancies = 12912;
  optional string parent_id = 917;
  UsageStatistics usage_statistics = 8635;
}

// SchemaValidation is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message SchemaValidation {
  option (resource_type_names) = "SchemaValidation";
  option (resource_type_names) = "Functionality";

  string format = 1670;
  string schema_url = 13358;
  repeated Error errors = 8879;
}

// Secret is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message Secret {
  option (resource_type_names) = "Secret";
  option (resource_type_names) = "Credential";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 17935;
  bool enabled = 11399;
  google.protobuf.Timestamp expiration_date = 12683;
  string id = 9780 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 18397;
  bool is_managed = 7065;
  map<string, string> labels = 2086;
  string name = 12084 [(buf.validate.field).required = true];
  google.protobuf.Timestamp not_before_date = 14774;
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 11803;
  optional string cloud_resource_id = 3258;
  GeoLocation geo_location = 7436;
  repeated Redundancy redundancies = 10405;
  optional string parent_id = 10243;
  UsageStatistics usage_statistics = 12725;
}

// SecurityAdvisoryDocument is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message SecurityAdvisoryDocument {
  option (resource_type_names) = "SecurityAdvisoryDocument";
  option (resource_type_names) = "Document";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 12215;
  string filetype = 13221;
  string id = 10862 [(buf.validate.field).required = true];
  map<string, string> labels = 8011;
  string name = 953 [(buf.validate.field).required = true];
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 1803;
  repeated DocumentChecksum document_checksums = 14645;
  DocumentLocation document_location = 11674;
  repeated DocumentSignature document_signatures = 15164;
  optional string parent_id = 17394;
  SchemaValidation schema_validation = 2392;
  repeated SecurityFeature security_features = 11115;
}

// SecurityAdvisoryFeed is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message SecurityAdvisoryFeed {
  option (resource_type_names) = "SecurityAdvisoryFeed";
  option (resource_type_names) = "Functionality";

  repeated string security_advisory_document_ids = 1213;
}

// SecurityAdvisoryService is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
// This service discloses security advisories, e.g. according to the CSAF standard. It has one or more feeds that contain the actual advisories as well as multiple (public) keys that are used to sign the advisory documents.
message SecurityAdvisoryService {
  option (resource_type_names) = "SecurityAdvisoryService";
  option (resource_type_names) = "NetworkService";
  option (resource_type_names) = "Networking";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 10263;
  string id = 11278 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 4168;
  repeated string ips = 14147;
  map<string, string> labels = 8514;
  string name = 9003 [(buf.validate.field).required = true];
  repeated uint32 ports = 6047;
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 1041;
  Authenticity authenticity = 9259;
  optional string compute_id = 4241;
  GeoLocation geo_location = 9087;
  repeated string key_ids = 9749;
  repeated Redundancy redundancies = 421;
  optional string parent_id = 6453;
  repeated SecurityAdvisoryFeed security_advisory_feeds = 2962;
  optional string service_metadata_document_id = 14000;
  TransportEncryption transport_encryption = 4649;
  UsageStatistics usage_statistics = 14038;
}

// SecurityFeature is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message SecurityFeature {
  oneof type {
    AnomalyDetection anomaly_detection = 4728;
    ActivityLogging activity_logging = 2956;
    ApplicationLogging application_logging = 12791;
    BootLogging boot_logging = 18439;
    OSLogging os_logging = 2926;
    ResourceLogging resource_logging = 17563;
    MalwareProtection malware_protection = 7265;
    UsageStatistics usage_statistics = 15242;
    CertificateBasedAuthentication certificate_based_authentication = 560;
    TokenBasedAuthentication token_based_authentication = 3684;
    MultiFactorAuthentiation multi_factor_authentiation = 13104;
    NoAuthentication no_authentication = 17718;
    OTPBasedAuthentication otp_based_authentication = 18743;
    PasswordBasedAuthentication password_based_authentication = 16941;
    SingleSignOn single_sign_on = 9281;
    ABAC abac = 14694;
    L3Firewall l3_firewall = 9125;
    WebApplicationFirewall web_application_firewall = 5789;
    RBAC rbac = 18783;
    Backup backup = 16413;
    DDoSProtection d_do_s_protection = 16707;
    GeoLocation geo_location = 10970;
    GeoRedundancy geo_redundancy = 2436;
    LocalRedundancy local_redundancy = 2537;
    ZoneRedundancy zone_redundancy = 11145;
    CustomerKeyEncryption customer_key_encryption = 5547;
    ManagedKeyEncryption managed_key_encryption = 9197;
    EncryptionInUse encryption_in_use = 15775;
    TransportEncryption transport_encryption = 15929;
    LocalAttestation local_attestation = 4296;
    RemoteAttestation remote_attestation = 13640;
    AutomaticUpdates automatic_updates = 9990;
    DocumentChecksum document_checksum = 16099;
    Immutability immutability = 2008;
    DocumentSignature document_signature = 7943;
  }
}

// ServiceMetadataDocument is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message ServiceMetadataDocument {
  option (resource_type_names) = "ServiceMetadataDocument";
  option (resource_type_names) = "Document";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 7335;
  string filetype = 16847;
  string id = 8568 [(buf.validate.field).required = true];
  map<string, string> labels = 555;
  string name = 13605 [(buf.validate.field).required = true];
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 11658;
  repeated DocumentChecksum document_checksums = 11937;
  DocumentLocation document_location = 3639;
  repeated DocumentSignature document_signatures = 1315;
  optional string parent_id = 10323;
  SchemaValidation schema_validation = 6622;
  repeated SecurityFeature security_features = 18737;
}

// DocumentSignature is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message DocumentSignature {
  option (resource_type_names) = "DocumentSignature";
  option (resource_type_names) = "Integrity";
  option (resource_type_names) = "SecurityFeature";

  string algorithm = 4031;
  repeated Error errors = 12856;
}

// SingleSignOn is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message SingleSignOn {
  option (resource_type_names) = "SingleSignOn";
  option (resource_type_names) = "Authenticity";
  option (resource_type_names) = "SecurityFeature";

  bool context_is_checked = 14488;
  bool enabled = 10569;
}

// Storage is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message Storage {
  oneof type {
    BlockStorage block_storage = 9808;
    DatabaseStorage database_storage = 10098;
    FileStorage file_storage = 18252;
    ObjectStorage object_storage = 7943;
  }
}

// StorageService is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
// This entity represents a network-based service that can be used to access a particular storage backend. It has multiple subclasses, e.g., for databases or object stores. It has a list of storage resources associated to it.
message StorageService {
  oneof type {
    DocumentDatabaseService document_database_service = 12515;
    KeyValueDatabaseService key_value_database_service = 1496;
    MultiModalDatabaseService multi_modal_database_service = 3152;
    RelationalDatabaseService relational_database_service = 15823;
    FileStorageService file_storage_service = 12635;
    ObjectStorageService object_storage_service = 10175;
  }
}

// TransportEncryption is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
// enabled means the resource _can_ be reached via https, while enforced means it _can only_ be reached via https (or http traffic is redirected)
message TransportEncryption {
  option (resource_type_names) = "TransportEncryption";
  option (resource_type_names) = "Confidentiality";
  option (resource_type_names) = "SecurityFeature";

  bool enabled = 2648;
  bool enforced = 8230;
  string protocol = 14651;
  float protocol_version = 2365;
  repeated CipherSuite cipher_suites = 17881;
}

// UsageStatistics is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message UsageStatistics {
  option (resource_type_names) = "UsageStatistics";
  option (resource_type_names) = "Auditing";
  option (resource_type_names) = "SecurityFeature";

  int32 api_hits_per_month = 7625;
}

// VMImage is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message VMImage {
  option (resource_type_names) = "VMImage";
  option (resource_type_names) = "Image";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 11908;
  string id = 2792 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 17657;
  map<string, string> labels = 15409;
  string name = 4387 [(buf.validate.field).required = true];
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 10970;
  optional string application_id = 11960;
  GeoLocation geo_location = 1386;
  repeated Redundancy redundancies = 1645;
  optional string parent_id = 12727;
  UsageStatistics usage_statistics = 9297;
}

// VirtualMachine is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message VirtualMachine {
  option (resource_type_names) = "VirtualMachine";
  option (resource_type_names) = "Compute";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 7616;
  string id = 15888 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 11229;
  map<string, string> labels = 12634;
  string name = 5434 [(buf.validate.field).required = true];
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 17236;
  ActivityLogging activity_logging = 17610;
  AutomaticUpdates automatic_updates = 7698;
  repeated string block_storage_ids = 14852;
  BootLogging boot_logging = 4303;
  EncryptionInUse encryption_in_use = 5839;
  GeoLocation geo_location = 17337;
  MalwareProtection malware_protection = 5352;
  repeated string network_interface_ids = 150;
  OSLogging os_logging = 14872;
  repeated Redundancy redundancies = 11599;
  RemoteAttestation remote_attestation = 16051;
  optional string parent_id = 7061;
  ResourceLogging resource_logging = 17205;
  UsageStatistics usage_statistics = 4834;
}

// VirtualNetwork is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message VirtualNetwork {
  option (resource_type_names) = "VirtualNetwork";
  option (resource_type_names) = "Networking";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 886;
  string id = 3775 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 13840;
  map<string, string> labels = 10621;
  string name = 10908 [(buf.validate.field).required = true];
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 13615;
  GeoLocation geo_location = 10940;
  repeated Redundancy redundancies = 9992;
  optional string parent_id = 3666;
  UsageStatistics usage_statistics = 7912;
}

// VirtualSubNetwork is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message VirtualSubNetwork {
  option (resource_type_names) = "VirtualSubNetwork";
  option (resource_type_names) = "Networking";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 8230;
  string id = 3268 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 17773;
  map<string, string> labels = 11025;
  string name = 16326 [(buf.validate.field).required = true];
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 17285;
  GeoLocation geo_location = 17257;
  repeated Redundancy redundancies = 15796;
  optional string parent_id = 10846;
  UsageStatistics usage_statistics = 5163;
}

// WebApplicationFirewall is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
// A WAF is a L7 firewall that includes L3 capabilities
message WebApplicationFirewall {
  option (resource_type_names) = "WebApplicationFirewall";
  option (resource_type_names) = "Firewall";
  option (resource_type_names) = "AccessRestriction";
  option (resource_type_names) = "Authorization";
  option (resource_type_names) = "SecurityFeature";

  bool enabled = 8961;
}

// Workflow is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message Workflow {
  option (resource_type_names) = "Workflow";
  option (resource_type_names) = "CICDService";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 16086;
  string id = 3473 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 6875;
  map<string, string> labels = 14015;
  string name = 17356 [(buf.validate.field).required = true];
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 8396;
  GeoLocation geo_location = 7652;
  repeated Redundancy redundancies = 150;
  optional string parent_id = 11244;
  UsageStatistics usage_statistics = 16884;
}

// Workspace is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message Workspace {
  option (resource_type_names) = "Workspace";
  option (resource_type_names) = "MachineLearning";
  option (resource_type_names) = "CloudResource";
  option (resource_type_names) = "Resource";

  google.protobuf.Timestamp creation_time = 17735;
  string id = 5830 [(buf.validate.field).required = true];
  bool internet_accessible_endpoint = 8166;
  map<string, string> labels = 13074;
  string name = 11995 [(buf.validate.field).required = true];
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 4937;
  AtRestEncryption at_rest_encryption = 3673;
  GeoLocation geo_location = 8617;
  repeated Redundancy redundancies = 14611;
  optional string parent_id = 951;
  ResourceLogging resource_logging = 3414;
  optional string storage_id = 5518;
  UsageStatistics usage_statistics = 18094;
}

// ZoneRedundancy is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message ZoneRedundancy {
  option (resource_type_names) = "ZoneRedundancy";
  option (resource_type_names) = "Redundancy";
  option (resource_type_names) = "Availability";
  option (resource_type_names) = "SecurityFeature";

  repeated GeoLocation geo_locations = 11767;
}
