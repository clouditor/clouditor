// Auto-generated code by owl2proto (https://github.com/oxisto/owl2proto)

// Copyright 2024 Fraunhofer AISEC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
//           $$\                           $$\ $$\   $$\
//           $$ |                          $$ |\__|  $$ |
//  $$$$$$$\ $$ | $$$$$$\  $$\   $$\  $$$$$$$ |$$\ $$$$$$\    $$$$$$\   $$$$$$\
// $$  _____|$$ |$$  __$$\ $$ |  $$ |$$  __$$ |$$ |\_$$  _|  $$  __$$\ $$  __$$\
// $$ /      $$ |$$ /  $$ |$$ |  $$ |$$ /  $$ |$$ |  $$ |    $$ /  $$ |$$ | \__|
// $$ |      $$ |$$ |  $$ |$$ |  $$ |$$ |  $$ |$$ |  $$ |$$\ $$ |  $$ |$$ |
// \$$$$$$\  $$ |\$$$$$   |\$$$$$   |\$$$$$$  |$$ |  \$$$   |\$$$$$   |$$ |
//  \_______|\__| \______/  \______/  \_______|\__|   \____/  \______/ \__|
//
// This file is part of Clouditor Community Edition.

syntax = "proto3";

package clouditor.ontology.v1;

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "tagger/tagger.proto";
import "validate/validate.proto";

option go_package = "clouditor.io/clouditor/api/ontology";

message CloudResource {
  oneof type {
    Compute compute = 1;
  }
}

// Compute is an abstract class, which can either be a VM or a container. Since this is not a leaf-node, it does not
// contain any properties.
message Compute {
  oneof type {
    VirtualMachine virtual_machine = 1;
    Container container = 2;
  }
}

// VirtualMachine is a virtual machine entity. It is a leaf node and does contain properties.
message VirtualMachine {
  // Properties from CloudResource
  string name = 1;

  // Properties from Compute
  repeated string network_interface_ids = 2;
  ResourceLogging resource_logging = 3;

  // Properties from VirtualMachine
  BootLogging boot_logging = 4;
}

// Container is a container entity. It is a leaf node and does contain properties.
message Container {
  // Properties from Compute
  repeated string network_interface_ids = 1;
}

message Logging {
  oneof type {
    ResourceLogging resource_logging = 1;
    BootLogging boot_logging = 2;
  }
}

message BootLogging {
  // Properties from Logging
  bool enabled = 1;
  string to_id = 2;
}

message ResourceLogging {
  // Properties from Logging
  bool enabled = 1;
  string to_id = 2;
}
