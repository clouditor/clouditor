// Auto-generated code by owl2proto (https://github.com/oxisto/owl2proto)

// Copyright 2024 Fraunhofer AISEC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
//           $$\                           $$\ $$\   $$\
//           $$ |                          $$ |\__|  $$ |
//  $$$$$$$\ $$ | $$$$$$\  $$\   $$\  $$$$$$$ |$$\ $$$$$$\    $$$$$$\   $$$$$$\
// $$  _____|$$ |$$  __$$\ $$ |  $$ |$$  __$$ |$$ |\_$$  _|  $$  __$$\ $$  __$$\
// $$ /      $$ |$$ /  $$ |$$ |  $$ |$$ /  $$ |$$ |  $$ |    $$ /  $$ |$$ | \__|
// $$ |      $$ |$$ |  $$ |$$ |  $$ |$$ |  $$ |$$ |  $$ |$$\ $$ |  $$ |$$ |
// \$$$$$$\  $$ |\$$$$$   |\$$$$$   |\$$$$$$  |$$ |  \$$$   |\$$$$$   |$$ |
//  \_______|\__| \______/  \______/  \_______|\__|   \____/  \______/ \__|
//
// This file is part of Clouditor Community Edition.

syntax = "proto3";

package clouditor.ontology.v1;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "tagger/tagger.proto";

option go_package = "clouditor.io/clouditor/api/ontology";
message ABAC {}

message AccessRestriction {
  oneof type {
    Firewall firewall = 101;
  }
}

// Account is an entity in our Cloud ontology
// This represents the cloud account as a whole, e.g., an Azure subscription.
message Account {}

message ActivityLogging {}

// AnomalyDetection is an entity in our Cloud ontology
// Analyzes the activity of a NetworkService (which includes DatabaseServices).
// AnomalyDetection is an entity in our Cloud ontology
// Scope contains the resource ID of the protected resource.
message AnomalyDetection {
  bool enabled = 1;
  ApplicationLogging application_logging = 2;
}

// Application is an entity in our Cloud ontology
// This encapsulates the whole (source) code of an application.
message Application {
  string programming_language = 1;
  repeated string translation_units = 2;
  repeated Functionality functionality = 3;
  string compute_id = 4;
}

message ApplicationLogging {}

message AtRestEncryption {
  string algorithm = 1;
  bool enabled = 2;
  string key_url = 3;

  oneof type {
    CustomerKeyEncryption customer_key_encryption = 101;
    ManagedKeyEncryption managed_key_encryption = 102;
  }
}

message Auditing {
  oneof type {
    AnomalyDetection anomaly_detection = 101;
    Logging logging = 102;
    MalwareProtection malware_protection = 103;
  }
}

message Authenticity {
  bool context_is_checked = 1;

  oneof type {
    CertificateBasedAuthentication certificate_based_authentication = 101;
    NoAuthentication no_authentication = 102;
    OTPBasedAuthentication otp_based_authentication = 103;
    PasswordBasedAuthentication password_based_authentication = 104;
    SingleSignOn single_sign_on = 105;
    TokenBasedAuthentication token_based_authentication = 106;
  }
}

message Authorization {
  oneof type {
    ABAC abac = 101;
    AccessRestriction access_restriction = 102;
    RBAC rbac = 103;
  }
}

// AutomaticSecurityUpdates is an entity in our Cloud ontology
// This feature is, e.g., available on some VM services to automatically update their software. It ensures that a resource is protected from tampering with its state.
message AutomaticSecurityUpdates {
  bool enabled = 1;
  // The interval refers to the update interval in days.
  int64 interval = 2;
  bool security_only = 3;
}

message Availability {
  oneof type {
    Backup backup = 101;
    DDoSProtection d_do_s_protection = 102;
    GeoLocation geo_location = 103;
    Redundancy redundancy = 104;
  }
}

// Backup is an entity in our Cloud ontology
// RetentionPeriod in hours
message Backup {
  bool enabled = 1;
  // The interval refers to the update interval in days.
  int64 interval = 2;
  int64 retention_period = 3;
  string storage_id = 4;
}

message Resource {
  int64 creation_time = 1;
  string id = 2;
  map<string, string> labels = 3;
  string name = 4;
  // The raw field contains the raw information that is used to fill in the fields of the ontology.
  string raw = 5;
  // ServiceID contains the ID of the cloud service to which this resource belongs.
  string service_id = 6;
  // The resource type. It is an array, because a type can be derived from another
  repeated string typ = 7;

  oneof type {
    Application application = 101;
    CloudResource cloud_resource = 102;
    Document document = 103;
  }
}

message BlockStorage {}

message BootLogging {}

message CICDService {
  oneof type {
    Job job = 101;
    Workflow workflow = 102;
  }
}

message CertificateBasedAuthentication {
  bool enabled = 1;
}

message CipherSuite {
  // for example: RSA, ECDSA
  string authentication_mechanism = 1;
  string key_exchange_algorithm = 2;
  // naming schema: SHA-256
  string mac_algorithm = 3;
  // naming schema: AES-128-GCM
  string session_cipher = 4;
}

message CloudResource {
  map<string, string> labels = 1;
  repeated SecurityFeature security_feature = 2;
  GeoLocation geo_location = 3;

  oneof type {
    Account account = 101;
    CICDService cicd_service = 102;
    Compute compute = 103;
    ContainerOrchestration container_orchestration = 104;
    ContainerRegistry container_registry = 105;
    Identifiable identifiable = 106;
    Image image = 107;
    IoT io_t = 108;
    Key key = 109;
    KeyVault key_vault = 110;
    Networking networking = 111;
    PasswordPolicy password_policy = 112;
    ResourceGroup resource_group = 113;
    Storage storage = 114;
  }
}

message CloudSDK {}

message Compute {
  ResourceLogging resource_logging = 1;
  repeated string network_interface_id = 2;
  EncryptionInUse encryption_in_use = 3;

  oneof type {
    Container container = 101;
    Function function = 102;
    VirtualMachine virtual_machine = 103;
    WebApp web_app = 104;
  }
}

message Confidentiality {
  oneof type {
    AtRestEncryption at_rest_encryption = 101;
    CipherSuite cipher_suite = 102;
    EncryptionInUse encryption_in_use = 103;
    TransportEncryption transport_encryption = 104;
  }
}

message Container {
  string image_id = 1;
}

message ContainerImage {}

message ContainerOrchestration {
  string management_url = 1;
  ResourceLogging resource_logging = 2;
  repeated string container_id = 3;
}

message ContainerRegistry {}

message CustomerKeyEncryption {
  string key_url = 1;
}

message DDoSProtection {}

message DatabaseConnect {}

message DatabaseOperation {
  repeated string calls = 1;
  string database_storage_id = 2;
  string database_service_id = 3;

  oneof type {
    DatabaseConnect database_connect = 101;
    DatabaseQuery database_query = 102;
  }
}

message DatabaseQuery {
  bool modify = 1;
}

// DatabaseService is an entity in our Cloud ontology
// This class represents a database service. For example, a postgres SQL server would be modelled as a database service (with a host and IP) and the individual tables or collections would be modelled as a DatabaseStorage entity.
message DatabaseService {
  MalwareProtection malware_protection = 1;
  HttpEndpoint http_endpoint = 2;

  oneof type {
    DocumentDatabaseService document_database_service = 101;
    KeyValueDatabaseService key_value_database_service = 102;
    RelationalDatabaseService relational_database_service = 103;
  }
}

// DatabaseStorage is an entity in our Cloud ontology
// describes the actual database or a table in a database
message DatabaseStorage {}

message DeviceProvisioningService {}

message Document {
  string filename = 1;
  repeated SecurityFeature security_feature = 2;
}

message DocumentDatabaseService {}

message EncryptionInUse {
  bool enabled = 1;
}

message FileStorage {
  bool public_access = 1;
}

// FileStorageService is an entity in our Cloud ontology
// An file storage service represents the network service that is used to access a list of file storage shares. The storage itself is modelled as a FileStorage. The service has an http endpoint.
message FileStorageService {
  HttpEndpoint http_endpoint = 1;
}

message Firewall {
  oneof type {
    L3Firewall l3_firewall = 101;
    WebApplicationFirewall web_application_firewall = 102;
  }
}

message Framework {
  oneof type {
    CloudSDK cloud_sdk = 101;
    HttpClientLibrary http_client_library = 102;
    HttpServer http_server = 103;
    Logger logger = 104;
  }
}

message Function {
  string runtime_language = 1;
  string runtime_version = 2;
}

message Functionality {
  oneof type {
    HttpEndpoint http_endpoint = 101;
    HttpRequestHandler http_request_handler = 102;
    Operation operation = 103;
  }
}

message GeoLocation {
  string region = 1;
}

message HttpClientLibrary {}

// HttpEndpoint is an entity in our Cloud ontology
// Via the Authenticity relationship, the access type can be specified, e.g. public access (no authentication), password-based, etc.
message HttpEndpoint {
  string handler = 1;
  string method = 2;
  string path = 3;
  string url = 4;
  TransportEncryption transport_encryption = 5;
  Authenticity authenticity = 6;

  oneof type {
    ProxiedEndpoint proxied_endpoint = 101;
  }
}

message HttpRequest {
  string call = 1;
  string req_body = 2;
  HttpEndpoint http_endpoint = 3;
}

message HttpRequestHandler {
  string path = 1;
  repeated HttpEndpoint http_endpoint = 2;
  Application application = 3;
}

message HttpServer {
  HttpRequestHandler http_request_handler = 1;
}

message Identifiable {
  bool activated = 1;
  Authorization authorization = 2;
  Authenticity authenticity = 3;

  oneof type {
    Identity identity = 101;
    RoleAssignment role_assignment = 102;
  }
}

message Identity {
  bool disable_password_policy = 1;
  bool enforce_mfa = 2;
  google.protobuf.Timestamp last_activity = 3;
  bool login_defender_enabled = 4;
  bool privileged = 5;
  repeated Authenticity authenticity = 6;
}

message Image {
  Application application = 1;

  oneof type {
    ContainerImage container_image = 101;
    VMImage vm_image = 102;
  }
}

message Immutability {
  bool enabled = 1;
}

message Integrity {
  oneof type {
    AutomaticSecurityUpdates automatic_security_updates = 101;
    Immutability immutability = 102;
  }
}

message IoT {
  oneof type {
    DeviceProvisioningService device_provisioning_service = 101;
    MessagingHub messaging_hub = 102;
  }
}

message Job {}

message TokenBasedAuthentication {
  bool enabled = 1;
  bool enforced = 2;
}

message Key {
  bool enabled = 1;
  int64 expiration_date = 2;
  bool is_managed = 3;
  int32 length = 4;
  int32 number_of_usages = 5;
}

message KeyValueDatabaseService {}

message KeyVault {
  bool is_active = 1;
}

message L3Firewall {
  bool enabled = 1;
  bool inbound = 2;
  string restricted_ports = 3;
}

// LoadBalancer is an entity in our Cloud ontology
// A Load Balancer may have multiple access restriction features, e.g. a L3 firewall and a WAF
message LoadBalancer {
  string url = 1;
  repeated string network_service_id = 2;
  repeated HttpEndpoint http_endpoint = 3;
}

// LogOperation is an entity in our Cloud ontology
// A LogOperation is used by an application
message LogOperation {
  string call = 1;
  string value = 2;
  Logging logging = 3;
}

message Logger {}

message Logging {
  bool enabled = 1;
  bool monitoring_enabled = 2;
  int64 retention_period = 3;
  bool security_alerts_enabled = 4;
  string logging_service_id = 5;

  oneof type {
    ActivityLogging activity_logging = 101;
    ApplicationLogging application_logging = 102;
    BootLogging boot_logging = 103;
    OSLogging os_logging = 104;
    ResourceLogging resource_logging = 105;
  }
}

// LoggingService is an entity in our Cloud ontology
// A logging-as-a-service offering, e.g. for analyzing logs; has a Storage resource that stores the logs
message LoggingService {
  repeated string storage_id = 1;
}

// MalwareProtection is an entity in our Cloud ontology
// analyzes the activity within a Compute resource
message MalwareProtection {
  int64 days_since_active = 1;
  bool enabled = 2;
  int32 number_of_threats_found = 3;
  ApplicationLogging application_logging = 4;
}

message ManagedKeyEncryption {}

message MessagingHub {}

message NetworkInterface {
  string network_service_id = 1;
}

message NetworkSecurityGroup {}

// NetworkService is an entity in our Cloud ontology
// A NetworkService is an application (on the network layer) running on a Compute resource. It provides access to a resource
message NetworkService {
  repeated string ips = 1;
  repeated uint32 ports = 2;
  TransportEncryption transport_encryption = 3;
  string compute_id = 4;

  oneof type {
    LoadBalancer load_balancer = 101;
    LoggingService logging_service = 102;
    StorageService storage_service = 103;
  }
}

message Networking {
  oneof type {
    NetworkInterface network_interface = 101;
    NetworkSecurityGroup network_security_group = 102;
    NetworkService network_service = 103;
    VirtualNetwork virtual_network = 104;
    VirtualSubNetwork virtual_sub_network = 105;
  }
}

message NoAuthentication {}

message OSLogging {}

message OTPBasedAuthentication {
  bool activated = 1;
}

message ObjectStorage {
  bool public_access = 1;
}

message ObjectStorageRequest {
  string source = 1;
  // The resource type. It is an array, because a type can be derived from another
  string typ = 2;
  string object_storage_id = 3;
}

// ObjectStorageService is an entity in our Cloud ontology
// An object storage service represents the network service that is used to access a list of object storage containers. The storage itself is modelled as a ObjectStorage. The service has an http endpoint.
message ObjectStorageService {
  HttpEndpoint http_endpoint = 1;
}

message Operation {
  oneof type {
    DatabaseOperation database_operation = 101;
    HttpRequest http_request = 102;
    LogOperation log_operation = 103;
    ObjectStorageRequest object_storage_request = 104;
  }
}

message PasswordBasedAuthentication {
  bool activated = 1;
}

message PasswordPolicy {}

// ProxiedEndpoint is an entity in our Cloud ontology
// An HTTP endpoint, that is routed through a (reverse) proxy, e.g. a load balancer.
message ProxiedEndpoint {}

message RBAC {
  // see Privacy Smells: Detecting Privacy Problems in Cloud Architectures (2020)
  float broad_assignments = 1;
  // see Privacy Smells: Detecting Privacy Problems in Cloud Architectures (2020)
  float mixed_duties = 2;
}

message Redundancy {
  bool geo = 1;
  bool local = 2;
  bool zone = 3;
}

message RelationalDatabaseService {}

message ResourceGroup {}

message ResourceLogging {}

message RoleAssignment {}

message SecurityFeature {
  oneof type {
    Auditing auditing = 101;
    Authenticity authenticity = 102;
    Authorization authorization = 103;
    Availability availability = 104;
    Confidentiality confidentiality = 105;
    Integrity integrity = 106;
  }
}

message SingleSignOn {
  bool enabled = 1;
}

message Storage {
  ResourceLogging resource_logging = 1;
  Redundancy redundancy = 2;
  Immutability immutability = 3;
  repeated Backup backup = 4;

  oneof type {
    BlockStorage block_storage = 101;
    DatabaseStorage database_storage = 102;
    FileStorage file_storage = 103;
    ObjectStorage object_storage = 104;
  }
}

// StorageService is an entity in our Cloud ontology
// This entity represents a network-based service that can be used to access a particular storage backend. It has multiple subclasses, e.g., for databases or object stores. It has a list of storage resources associated to it.
message StorageService {
  repeated string storage_id = 1;

  oneof type {
    DatabaseService database_service = 101;
    FileStorageService file_storage_service = 102;
    ObjectStorageService object_storage_service = 103;
  }
}

// TransportEncryption is an entity in our Cloud ontology
// enabled means the resource _can_ be reached via https, while enforced means it _can only_ be reached via https (or http traffic is redirected)
message TransportEncryption {
  bool enabled = 1;
  bool enforced = 2;
  string protocol = 3;
  float protocol_version = 4;
  repeated CipherSuite cipher_suite = 5;
}

message VMImage {}

message VirtualMachine {
  OSLogging os_logging = 1;
  MalwareProtection malware_protection = 2;
  BootLogging boot_logging = 3;
  repeated string block_storage_id = 4;
  AutomaticSecurityUpdates automatic_security_updates = 5;
  ActivityLogging activity_logging = 6;
}

message VirtualNetwork {}

message VirtualSubNetwork {}

message WebApp {}

// WebApplicationFirewall is an entity in our Cloud ontology
// A WAF is a L7 firewall that includes L3 capabilities
message WebApplicationFirewall {
  bool enabled = 1;
}

message Workflow {}
